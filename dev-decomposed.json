[
    {
        "database_id": "tvshow",
        "interaction": [
            {
                "utterance": "what are the tv channels playing any cartoons directed by Ben Jones?",
                "query": "SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones'"
            },
            {
                "utterance": "What are the package options of all tv channels that are not in tb1?",
                "query": "SELECT package_option FROM TV_Channel WHERE id EXCEPT (SELECT channel FROM cartoon)"
            }
        ],
        "final": {
            "query": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones')",
            "utterance": "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?"
        }
    },
    {
        "database_id": "dog_kennels",
        "interaction": [
            {
                "utterance": "what is the average age of dogs?",
                "query": "SELECT avg(age) FROM Dogs"
            },
            {
                "utterance": "how many dogs have an age below \"value\"?",
                "query": "SELECT count(*) FROM Dogs WHERE age  < 'value'"
            }
        ],
        "final": {
            "query": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )",
            "utterance": "How many dogs have an age below the average?"
        }
    },
    {
        "database_id": "poker_player",
        "interaction": [
            {
                "utterance": "what is the id of tallest poker player?",
                "query": "SELECT Height FROM poker_player ORDER BY Height DESC LIMIT 1"
            },
            {
                "utterance": "what is money rank of the id \"value\"?",
                "query": "SELECT Money_Rank FROM people WHERE People_ID == 'value'"
            }
        ],
        "final": {
            "query": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1",
            "utterance": "What is the money rank of the tallest poker player?"
        }
    },
    {
        "database_id": "flight_2",
        "interaction": [
            {
                "utterance": "what is the id of United Airlines?",
                "query": "SELECT uid FROM Airlines WHERE Airline = 'United Airlines'"
            },
            {
                "utterance": "count the number of flight that arrive in Aberdeen with the id of \"value\"",
                "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City = 'Aberdeen' and T1.Airline = 'value'"
            }
        ],
        "final": {
            "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City = 'Aberdeen' AND T3.Airline = 'United Airlines'",
            "utterance": "Count the number of United Airlines flights that arrive in Aberdeen."
        }
    },
    {
        "database_id": "student_transcripts_tracking",
        "interaction": [
            {
                "utterance": "Find the first name of the students who permanently live in the country Haiti?",
                "query": "SELECT t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country = 'haiti'"
            },
            {
                "utterance": "Find the first name of the students who have the cell phone number 09700166582  ",
                "query": "SELECT first_name from students WHERE cell_mobile_number = '09700166582'"
            },
            {
                "utterance": "what are the students are in tb1 or tb2?",
                "query": "SELECT first_name FROM tb1 UNION SELECT first_name FROM tb2"
            }
        ],
        "final": {
            "query": "SELECT t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country = 'haiti' or t1.cell_mobile_number = '09700166582'",
            "utterance": "Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582 ."
        }
    },
    {
        "database_id": "orchestra",
        "interaction": [
            {
                "utterance": "What are the record companies that are used by orchestras founded before 2003?",
                "query": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003"
            },
            {
                "utterance": "What are the record companies that are used by orchestras founded after 2003?",
                "query": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003"
            },
            {
                "utterance": "what are the companies in both tb1 and tb2?",
                "query": "SELECT Record_Company FROM tb1 AS T1 JOIN tb2 AS T1.Record_Company = T2.Record_Company"
            }
        ],
        "final": {
            "query": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003",
            "utterance": "What are the record companies that are used by both orchestras founded before 2003 and those founded after 2003?"
        }
    },
    {
        "database_id": "car_1",
        "interaction": [
            {
                "utterance": "what are the id of cars produced after 1980?",
                "query": "SELECT id FROM CARS_DATA WHERE T3.year > 1980"
            },
            {
                "utterance": "what are different models for cars in tb1?",
                "query": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN tb1 AS T2 ON T1.MakeId  =  T2.id"
            }
        ],
        "final": {
            "query": "SELECT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year > 1980",
            "utterance": "What are the different models for the cards produced after 1980?"
        }
    },
    {
        "database_id": "wta_1",
        "interaction": [
            {
                "utterance": "what is the number of players for each country?",
                "query": "SELECT country_code, count(*) GROUP BY country_code"
            },
            {
                "utterance": "what is the code of the country with the most players count?",
                "query": "SELECT country_code FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1",
            "utterance": "What is the code of the country with the most players?"
        }
    },
    {
        "database_id": "car_1",
        "interaction": [
            {
                "utterance": "what is the id of the car with minimum horsepower?",
                "query": "SELECT Id FROM CARS_DATA ORDER BY horsepower ASC LIMIT 1"
            },
            {
                "utterance": "what is the model of the car with id \"value\"?",
                "query": "SELECT Model FROM CAR_NAMES WHERE MakeId = 'value'"
            }
        ],
        "final": {
            "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1",
            "utterance": "Which model of the car has the minimum horsepower?"
        }
    },
    {
        "database_id": "cre_Doc_Template_Mgt",
        "interaction": [
            {
                "utterance": "what is the number of paragraphs for each document?",
                "query": "SELECT document_id, count(*) FROM Paragraphs GROUP BY document_id "
            },
            {
                "utterance": "Return the id of the document with the fewest paragraphs count?",
                "query": "SELECT document_id FROM tb1 ORDER BY counter ASC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1",
            "utterance": "Return the id of the document with the fewest paragraphs."
        }
    },
    {
        "database_id": "car_1",
        "interaction": [
            {
                "utterance": "what is id  with the maximum miles per gallon?",
                "query": "SELECT Id FROM CARS_DATA ORDER BY mpg DESC LIMIT 1"
            },
            {
                "utterance": "what is the model with the id \"value\"?",
                "query": "SELECT Model FROM CAR_NAMES WHERE MakeId = 'value'"
            }
        ],
        "final": {
            "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1",
            "utterance": "Which model saves the most gasoline? That is to say, have the maximum miles per gallon."
        }
    },
    {
        "database_id": "orchestra",
        "interaction": [
            {
                "utterance": "what is the number of orchestras for each record company?",
                "query": "SELECT Record_Company, count(*) FROM orchestra GROUP BY Record_Company"
            },
            {
                "utterance": "what is the record company with the most number of orchestras count.",
                "query": "SELECT Record_Company FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1",
            "utterance": "List the record company shared by the most number of orchestras."
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "what is the life expectancy for each country in Asia.",
                "query": "SELECT Name, LifeExpectancy FROM country WHERE Continent = 'Asia' "
            },
            {
                "utterance": "what is the name of countries in tb1 with the shortest life expectancy.",
                "query": "SELECT Name FROM tb1 ORDER BY LifeExpectancy LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy LIMIT 1",
            "utterance": "What is the name of country that has the shortest life expectancy in Asia?"
        }
    },
    {
        "database_id": "flight_2",
        "interaction": [
            {
                "utterance": "what are the flights land in Aberdeen?",
                "query": "SELECT * FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city = 'Aberdeen'"
            },
            {
                "utterance": "what are the flights land in Abilene?",
                "query": "SELECT * FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city =  'Abilene'"
            },
            {
                "utterance": "what are the flights in tb1 or tb2?",
                "query": "SELECT * FROM tb1 AS T1 UNION SELECT * FROM tb2"
            },
            {
                "utterance": "what are the number of flights in tb3?",
                "query": "SELECT count(*) FROM tb3"
            }
        ],
        "final": {
            "query": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city = 'Aberdeen' OR T2.city = 'Abilene'",
            "utterance": "How many flights land in Aberdeen or Abilene?"
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "what are the countries in the continent of North America whose area is bigger than 3000?",
                "query": "SELECT * from country where continent = 'north america' and surfacearea > 3000"
            },
            {
                "utterance": "what are the total population and average area of countries in tb1?",
                "query": "SELECT sum(population) ,  avg(surfacearea) from tb1"
            }
        ],
        "final": {
            "query": "SELECT sum(population) ,  avg(surfacearea) from country where continent = 'north america' and surfacearea > 3000",
            "utterance": "What is the total population and average area of countries in the continent of North America whose area is bigger than 3000 ?"
        }
    },
    {
        "database_id": "pets_1",
        "interaction": [
            {
                "utterance": "what are the id of cats as pets?",
                "query": "SELECT petid FROM pets WHERE pettype = 'cat'"
            },
            {
                "utterance": "what are the id of students who own pets with id \"value\"?",
                "query": "SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T2.stuid = 'value'"
            },
            {
                "utterance": "what are studets not in tb2?",
                "query": "SELECT stuid FROM student EXCEPT SELECT stuid FROM tb2"
            }
        ],
        "final": {
            "query": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype = 'cat'",
            "utterance": "What are the ids of the students who do not own cats as pets?"
        }
    },
    {
        "database_id": "wta_1",
        "interaction": [
            {
                "utterance": "what is the number of matches for each winner?",
                "query": "SELECT winner_name , count(*) FROM matches GROUP BY winner_name "
            },
            {
                "utterance": "what is the winner with the most matches count?",
                "query": "SELECT winner_name FROM tb1 ORDER BY counter DESC LIMIT 1"
            },
            {
                "utterance": "what is the rank points and name of the winner with name \"value\"?",
                "query": "SELECT T1.winner_name ,  T1.winner_rank_points FROM matches AS T1 JOIN tb2 AS T2 ON T1.winner_name = T2.winner_name"
            }
        ],
        "final": {
            "query": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",
            "utterance": "What is the name of the winner who has won the most matches, and how many rank points does this player have?"
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "what are republic governments?",
                "query": "SELECT Code FROM country WHERE GovernmentForm  =  'Republic' "
            },
            {
                "utterance": "what are the number of countries for each language in tb1?",
                "query": "SELECT T2.language, count(*) FROM tb1 AS T1 JOIN countrylanguage AS T2  T1.Code  =  T2.CountryCode GROUP BY T2.Language"
            },
            {
                "utterance": "which language has the count of 1 in tb2?",
                "query": "SELECT language FROM tb2 WHERE counter = 1"
            }
        ],
        "final": {
            "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  'Republic' GROUP BY T2.Language HAVING COUNT(*) = 1",
            "utterance": "Which languages are spoken by only one country in republic governments?"
        }
    },
    {
        "database_id": "dog_kennels",
        "interaction": [
            {
                "utterance": "what is the total treatment cost per dog?",
                "query": "SELECT name, sum(cost_of_treatment) from treatments group by dog_id  "
            },
            {
                "utterance": "which dog has the cost less that or equal to 1000?",
                "query": "SELECT name FROM tb1 WHERE summation <= 1000"
            }
        ],
        "final": {
            "query": "SELECT name from dogs where dog_id not in ( SELECT dog_id from treatments group by dog_id having sum(cost_of_treatment) > 1000 )",
            "utterance": "Which dogs have not cost their owner more than 1000 for treatment ? List the dog names ."
        }
    },
    {
        "database_id": "employee_hire_evaluation",
        "interaction": [
            {
                "utterance": "what is the average number of products?",
                "query": "SELECT avg(number_products) FROM shop"
            },
            {
                "utterance": "Find the names of stores whose number products is more than the \"value\"",
                "query": "SELECT name FROM shop WHERE number_products  > 'value'"
            }
        ],
        "final": {
            "query": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)",
            "utterance": "Find the names of stores whose number products is more than the average number of products."
        }
    },
    {
        "database_id": "cre_Doc_Template_Mgt",
        "interaction": [
            {
                "utterance": "what is number of templates per template type code?",
                "query": "SELECT template_type_code, count(*) FROM Templates GROUP BY template_type_code "
            },
            {
                "utterance": "what is template the most number of templates count? ",
                "query": "SELECT template_type_code FROM tb1 ORDER BY count(*) DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1",
            "utterance": "Which template type code has most number of templates?"
        }
    },
    {
        "database_id": "notfound",
        "interaction": [
            {
                "utterance": "what is the number of concerts per year?",
                "query": "SELECT YEAR, count(*) concert GROUP BY YEAR"
            },
            {
                "utterance": "what is the year that had the most concerts in tb1?",
                "query": "SELECT YEAR FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "Question1:What is the year that had the most concerts?",
            "utterance": ""
        }
    },
    {
        "database_id": "car_1",
        "interaction": [
            {
                "utterance": "what are the id of cars produced after 1980?",
                "query": "SELECT id FROM CARS_DATA WHERE T3.year > 1980"
            },
            {
                "utterance": "Which distinct models for car ids in tb1?",
                "query": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN tb1 AS T2 ON T1.MakeId  =  T2.id"
            }
        ],
        "final": {
            "query": "SELECT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year > 1980",
            "utterance": "Which distinct car models are the produced after 1980?"
        }
    },
    {
        "database_id": "employee_hire_evaluation",
        "interaction": [
            {
                "utterance": "what is the id of the employee who got the highest one time bonus.",
                "query": "SELECT Employee_ID FROM evaluation ORDER By bonus DESC LIMIT 1"
            },
            {
                "utterance": "Find the name of employee who got the highest one time bonus.",
                "query": "SELECT name FROM employee WHERE Employee_ID = 'value'"
            }
        ],
        "final": {
            "query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1",
            "utterance": "Find the name of the employee who got the highest one time bonus."
        }
    },
    {
        "database_id": "notfound",
        "interaction": [
            {
                "utterance": "what is the id of United Airlines?",
                "query": "SELECT uid FROM Airlines WHERE Airline = 'United Airlines'"
            },
            {
                "utterance": "How many flights go to city \"Aberdeen\" with the id of \"value\"?",
                "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City = 'Aberdeen' and T1.Airline = 'value'"
            }
        ],
        "final": {
            "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City = 'Aberdeen' AND T3.Airline = 'United Airlines'",
            "utterance": " How many United Airlines flights go to City \"Aberdeen\"?"
        }
    },
    {
        "database_id": "network_1",
        "interaction": [
            {
                "utterance": "How many times each grade given to students",
                "query": "SELECT grade, count(*) FROM Highschooler GROUP BY grade"
            },
            {
                "utterance": "which grade has the most high schoolers in tb1?",
                "query": "SELECT grade FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1",
            "utterance": "Which grade has the most high schoolers?"
        }
    },
    {
        "database_id": "cre_Doc_Template_Mgt",
        "interaction": [
            {
                "utterance": "What are the codes of template types that are used for documents?",
                "query": "SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id"
            },
            {
                "utterance": "What are the codes of template that are not in tb1?",
                "query": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM tb1"
            }
        ],
        "final": {
            "query": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id",
            "utterance": "What are the codes of template types that are not used for any document?"
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "what are the asian countries?",
                "query": "SELECT * FROM country WHERE Continent = 'Asia'"
            },
            {
                "utterance": "Find the name, population and expected life length of the country with the largest area in tb1?",
                "query": "SELECT Name ,  Population ,  LifeExpectancy FROM tb1 ORDER BY SurfaceArea DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent = 'Asia' ORDER BY SurfaceArea DESC LIMIT 1",
            "utterance": "Find the name, population and expected life length of asian country with the largest area?"
        }
    },
    {
        "database_id": "concert_singer",
        "interaction": [
            {
                "utterance": "what is the number of concerts per year?",
                "query": "SELECT YEAR, count(*) concert GROUP BY YEAR"
            },
            {
                "utterance": "Which year has most number of concerts in tb1?",
                "query": "SELECT YEAR FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
            "utterance": "Which year has most number of concerts?"
        }
    },
    {
        "database_id": "dog_kennels",
        "interaction": [
            {
                "utterance": "how much treatment spent for each dog names?",
                "query": "SELECT name, sum(cost_of_treatment) from treatments group by dog_id "
            },
            {
                "utterance": "what are the names of the dogs for which the summation cost is equal or less than 1000.",
                "query": "SELECT name from tb1 WHERE summation <= 1000"
            }
        ],
        "final": {
            "query": "SELECT name from dogs where dog_id not in ( SELECT dog_id from treatments group by dog_id having sum(cost_of_treatment) > 1000 )",
            "utterance": "What are the names of the dogs for which the owner has not spend more than 1000 for treatment ?"
        }
    },
    {
        "database_id": "wta_1",
        "interaction": [
            {
                "utterance": "what is the number of matches for each year?",
                "query": "SELECT YEAR, count(*) FROM matches GROUP BY YEAR"
            },
            {
                "utterance": "hich year had the most matches in tb1?",
                "query": "SELECT YEAR FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
            "utterance": "Which year had the most matches?"
        }
    },
    {
        "database_id": "network_1",
        "interaction": [
            {
                "utterance": "what is the id and grade of students who have friends?",
                "query": "SELECT T1.student_id, T2.grade FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id"
            },
            {
                "utterance": "what is the average grade of students in tb1?",
                "query": "SELECT avg(grade) FROM tb1"
            }
        ],
        "final": {
            "query": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
            "utterance": "What is the average grade of students who have friends?"
        }
    },
    {
        "database_id": "network_1",
        "interaction": [
            {
                "utterance": "Show name of all students who have some friends?",
                "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id"
            },
            {
                "utterance": "Show name of all students who are liked by someone else",
                "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id"
            },
            {
                "utterance": "what are the names in tb1 and tb2?",
                "query": "SELECT T1.name FROM tb1 AS T1 JOIN tb2 AS T2 ON T1.name = T2.name"
            }
        ],
        "final": {
            "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id",
            "utterance": "Show name of all students who have some friends and also are liked by someone else."
        }
    },
    {
        "database_id": "network_1",
        "interaction": [
            {
                "utterance": "Show the ids of high schoolers who have friends.",
                "query": "SELECT student_id FROM Friend"
            },
            {
                "utterance": "Show the ids of high schoolers who are liked by someone else.",
                "query": "SELECT liked_id FROM Likes"
            },
            {
                "utterance": "Show the ids that are in tb1 and tb2.",
                "query": "SELECT student_id FROM tb1 AS T1 JOIN liked_id FROM tb2 AS T2 ON T1.student_id = T2.liked_id"
            }
        ],
        "final": {
            "query": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes",
            "utterance": "Show the ids of high schoolers who have friends and are also liked by someone else."
        }
    },
    {
        "database_id": "concert_singer",
        "interaction": [
            {
                "utterance": "what are the concerts id in year 2014?",
                "query": "SELECT concert_id FROM concert WHERE year = 2014"
            },
            {
                "utterance": "what are the singers id with the concerts id in tb1.",
                "query": "SELECT T1.student_id FROM singer_in_concert AS T1 JOIN tb1 AS T2 ON T1.concert_id = T2.concert_id"
            },
            {
                "utterance": "List all singer names in tb2.",
                "query": "SELECT T2.name FROM singer FROM singer AS T1 JOIN tb2 AS T2 ON T1.singer_id = T2.singer_id"
            }
        ],
        "final": {
            "query": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year = 2014",
            "utterance": "List all singer names in concerts in year 2014."
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "What are the regions that use English?",
                "query": "SELECT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'English'"
            },
            {
                "utterance": "What are the regions that use Dutch?",
                "query": "SELECT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'Dutch'"
            },
            {
                "utterance": "What are the regions that are in tb1 or tb2?",
                "query": "SELECT Region FROM tb1 UNION SELECT Region FROM tb2"
            }
        ],
        "final": {
            "query": "SELECT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'English' OR T2.Language = 'Dutch'",
            "utterance": "What are the regions that use English or Dutch?"
        }
    },
    {
        "database_id": "notfound",
        "interaction": [
            {
                "utterance": "what is the id of the car with the smallest amount of horsepower??",
                "query": "SELECT Id FROM CARS_DATA ORDER BY horsepower ASC LIMIT 1"
            },
            {
                "utterance": "what is the model of the car with id \"value\"?",
                "query": "SELECT Model FROM CAR_NAMES WHERE MakeId = 'value'"
            }
        ],
        "final": {
            "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1",
            "utterance": " What is the model of the car with the smallest amount of horsepower?"
        }
    },
    {
        "database_id": "dog_kennels",
        "interaction": [
            {
                "utterance": "Which states have both owners?",
                "query": "SELECT state FROM Owners"
            },
            {
                "utterance": "Which states professionals living there?",
                "query": "SELECT state FROM Professionals"
            },
            {
                "utterance": "Which states are in tb1 and tb2?",
                "query": "SELECT T1.states FROM tb1 AS T1 JOIN tb2 AS T2 ON T1.states = T2.states"
            }
        ],
        "final": {
            "query": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals",
            "utterance": "Which states have both owners and professionals living there?"
        }
    },
    {
        "database_id": "course_teach",
        "interaction": [
            {
                "utterance": "what is the id of the math course?",
                "query": "SELECT Course_ID FROM course WHERE Course = 'Math'"
            },
            {
                "utterance": "what are ids of teachers who have courses in tb1?",
                "query": "SELECT Teacher_ID FROM course_arrange WHERE Course_ID = 'value'"
            },
            {
                "utterance": "Show the name of the teacher in tb2.",
                "query": "SELECT T1.Name FROM teacher AS T1 JOIN tb2 AS T2 ON T1.Teacher_ID = T2.Teacher_ID"
            }
        ],
        "final": {
            "query": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course = 'Math'",
            "utterance": "Show the name of the teacher for the math course."
        }
    },
    {
        "database_id": "car_1",
        "interaction": [
            {
                "utterance": "what is the accelerate of the car with the most horsepower?",
                "query": "SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1"
            },
            {
                "utterance": "What is the number of cars with a greater accelerate than the \"value\"?",
                "query": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  > 'value'"
            }
        ],
        "final": {
            "query": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 )",
            "utterance": "What is the number of cars with a greater accelerate than the one with the most horsepower?"
        }
    },
    {
        "database_id": "singer",
        "interaction": [
            {
                "utterance": "what is the number of singers for each citizenship?",
                "query": "SELECT citizenship, count(*) from singer group by citizenship"
            },
            {
                "utterance": "What is the most common singer citizenship in tb1?",
                "query": "SELECT citizenship from tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT citizenship from singer group by citizenship order by count(*) desc limit 1",
            "utterance": "What is the most common singer citizenship ?"
        }
    },
    {
        "database_id": "wta_1",
        "interaction": [
            {
                "utterance": "what are the participants in the in the Australian Open tournament?",
                "query": "SELECT * FROM matches WHERE tourney_name = 'Australian Open' "
            },
            {
                "utterance": "What is the name of the winner with the most rank points in tb1?",
                "query": "SELECT winner_name FROM tb1 ORDER BY winner_rank_points DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT winner_name FROM matches WHERE tourney_name = 'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",
            "utterance": "What is the name of the winner with the most rank points who participated in the Australian Open tournament?"
        }
    },
    {
        "database_id": "concert_singer",
        "interaction": [
            {
                "utterance": "what is the average age of singers?",
                "query": "SELECT avg(age) FROM singer"
            },
            {
                "utterance": "What are all the song names by singers who are older than \"value\"?",
                "query": "SELECT song_name FROM singer WHERE age  > 'value'"
            }
        ],
        "final": {
            "query": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)",
            "utterance": "What are all the song names by singers who are older than average?"
        }
    },
    {
        "database_id": "concert_singer",
        "interaction": [
            {
                "utterance": "what is the average age of singers?",
                "query": "SELECT avg(age) FROM singer"
            },
            {
                "utterance": "List all song names by singers above the age \"value\".",
                "query": "SELECT song_name FROM singer WHERE age  > 'value'"
            }
        ],
        "final": {
            "query": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)",
            "utterance": "List all song names by singers above the average age."
        }
    },
    {
        "database_id": "student_transcripts_tracking",
        "interaction": [
            {
                "utterance": "what is the id of Bachelor degree program?",
                "query": "SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name = 'Bachelor'"
            },
            {
                "utterance": "what are the students enrolled in degree program with id \"value\"?",
                "query": "SELECT * FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id WHERE T2.degree_program_id = 'value'"
            },
            {
                "utterance": "List the first name, middle name, last name of students in tb2. ",
                "query": "SELECT first_name ,  middle_name ,  last_name FROM tb2"
            }
        ],
        "final": {
            "query": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name = 'Bachelor'",
            "utterance": "Who is enrolled in a Bachelor degree program? List the first name, middle name, last name."
        }
    },
    {
        "database_id": "course_teach",
        "interaction": [
            {
                "utterance": "List the id of teachers who have been arranged to teach courses.",
                "query": "SELECT Teacher_id FROM course_arrange"
            },
            {
                "utterance": "List the id of teachers who are not in tb1.",
                "query": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM tb1)"
            }
        ],
        "final": {
            "query": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)",
            "utterance": "List the names of teachers who have not been arranged to teach courses."
        }
    },
    {
        "database_id": "poker_player",
        "interaction": [
            {
                "utterance": "What are the ids of people who play poker?",
                "query": "SELECT People_ID FROM poker_player"
            },
            {
                "utterance": "What are the names of people who are not in tb1?",
                "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM tb1)"
            }
        ],
        "final": {
            "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)",
            "utterance": "What are the names of people who do not play poker?"
        }
    },
    {
        "database_id": "concert_singer",
        "interaction": [
            {
                "utterance": "Show the stadium names with concerts.",
                "query": "SELECT stadium_id FROM concert"
            },
            {
                "utterance": "which stadiums are not in tb1?",
                "query": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM tb1"
            }
        ],
        "final": {
            "query": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
            "utterance": "Show the stadium names without any concert."
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "What are the codes of the countries that do not speak English?",
                "query": "SELECT CountryCode FROM countrylanguage WHERE LANGUAGE != 'English'"
            },
            {
                "utterance": "What are the codes of the countries that whose government forms are not Republic.",
                "query": "SELECT Code FROM country WHERE GovernmentForm != 'Republic'"
            },
            {
                "utterance": "what are the countries in both tb1 and tb2?",
                "query": "SELECT CountryCode FROM tb1 INTERSECT SELECT Code FROM tb2"
            }
        ],
        "final": {
            "query": "SELECT Code FROM country WHERE GovernmentForm != 'Republic' EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE = 'English'",
            "utterance": "What are the codes of the countries that do not speak English and whose government forms are not Republic?"
        }
    },
    {
        "database_id": "network_1",
        "interaction": [
            {
                "utterance": "what is the id of high school student Kyle?",
                "query": "SELECT id FROM Highschooler WHERE name = 'Kyle'"
            },
            {
                "utterance": "Return the names of friends of the high school student with the id \"value\".",
                "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id  =  T2.id WHERE T1.student_id = 'value'"
            }
        ],
        "final": {
            "query": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name = 'Kyle'",
            "utterance": "Return the names of friends of the high school student Kyle."
        }
    },
    {
        "database_id": "wta_1",
        "interaction": [
            {
                "utterance": "what are the participants in the Australian Open tourney?",
                "query": "SELECT * FROM matches WHERE tourney_name = 'Australian Open' "
            },
            {
                "utterance": "Find the name of the winner who has the highest rank points in tb1?",
                "query": "SELECT winner_name FROM tb1 ORDER BY winner_rank_points DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT winner_name FROM matches WHERE tourney_name = 'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",
            "utterance": "Find the name of the winner who has the highest rank points and participated in the Australian Open tourney."
        }
    },
    {
        "database_id": "dog_kennels",
        "interaction": [
            {
                "utterance": "what is the average age of dogs?",
                "query": "SELECT avg(age) FROM Dogs"
            },
            {
                "utterance": "Count the number of dogs of an age below the \"value\".",
                "query": "SELECT count(*) FROM Dogs WHERE age  < 'value'"
            }
        ],
        "final": {
            "query": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )",
            "utterance": "Count the number of dogs of an age below the average."
        }
    },
    {
        "database_id": "museum_visit",
        "interaction": [
            {
                "utterance": "what is the minimum staff number of all museums opened after 2010.",
                "query": "SELECT min(num_of_staff) FROM museum WHERE open_year > 2010"
            },
            {
                "utterance": "find the names of museums which have more staff than the \"value\".",
                "query": "SELECT name FROM museum WHERE num_of_staff  > 'value'"
            }
        ],
        "final": {
            "query": "SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year > 2010)",
            "utterance": "find the names of museums which have more staff than the minimum staff number of all museums opened after 2010."
        }
    },
    {
        "database_id": "pets_1",
        "interaction": [
            {
                "utterance": "what are the ids of cats that is age 3. ",
                "query": "SELECT petid FROM pets WHERE pet_age = 3 AND pettype = 'cat'."
            },
            {
                "utterance": "what are the student ids who has the pets in tb1.",
                "query": "SELECT T1.stuid FROM has_pet AS T1 JOIN tb1 AS T2 ON T1.petid  =  T2.petid"
            },
            {
                "utterance": "Find the last name of the student in the tb2.",
                "query": "SELECT T1.lname FROM student AS T1 JOIN tb2 AS T2 ON T1.stuid  =  T2.stuid"
            }
        ],
        "final": {
            "query": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age = 3 AND T3.pettype = 'cat'",
            "utterance": "Find the last name of the student who has a cat that is age 3."
        }
    },
    {
        "database_id": "network_1",
        "interaction": [
            {
                "utterance": "what students have friends?",
                "query": "SELECT student_id FROM Friend"
            },
            {
                "utterance": "what are the ids of high school students not in tb1?",
                "query": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM tb1"
            }
        ],
        "final": {
            "query": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend",
            "utterance": "What are the ids of high school students who do not have friends?"
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "what are the countries for which Chinese is the official language.",
                "query": "SELECT country_code FROM countrylanguage WHERE IsOfficial = 'T' AND Language = 'Chinese'"
            },
            {
                "utterance": "what countries in tb1 are in Asia?",
                "query": "SELECT T1.Code FROM country AS T1 JOIN tb1 AS T2 ON T1.Code = T2.CountryCode WHERE Continent = 'Asia'"
            },
            {
                "utterance": "Return the different names of cities that are in tb2.",
                "query": "SELECT T1.Name FROM city AS T1 JOIN tb2 AS T2 ON T1.Code = T2.CountryCode"
            }
        ],
        "final": {
            "query": "SELECT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial = 'T' AND T2.Language = 'Chinese' AND T1.Continent = 'Asia'",
            "utterance": "Return the different names of cities that are in Asia and for which Chinese is the official language."
        }
    },
    {
        "database_id": "concert_singer",
        "interaction": [
            {
                "utterance": "what are concerts in 2014?",
                "query": "SELECT student_id FROM concert WHERE year = 2014"
            },
            {
                "utterance": "what are the names of stadiums with concerts in tb1?",
                "query": "SELECT T1.name FROM stadium AS T1 JOIN tb1 AS T2 ON T1.student_id = T2.student_id"
            },
            {
                "utterance": "what are the names of stadiums not in tb2?",
                "query": "SELECT name FROM stadium EXCEPT SELECT name FROM tb2"
            }
        ],
        "final": {
            "query": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year = 2014",
            "utterance": "What are the names of all stadiums that did not have a concert in 2014?"
        }
    },
    {
        "database_id": "concert_singer",
        "interaction": [
            {
                "utterance": "what are the concerts id in year 2014?",
                "query": "SELECT concert_id FROM concert WHERE year = 2014"
            },
            {
                "utterance": "what are the singers id with the concerts id in tb1.",
                "query": "SELECT T1.student_id FROM singer_in_concert AS T1 JOIN tb1 AS T2 ON T1.concert_id = T2.concert_id"
            },
            {
                "utterance": "What are the names of the singers who performed in concerts in tb2.",
                "query": "SELECT T2.name FROM singer FROM singer AS T1 JOIN tb2 AS T2 ON T1.singer_id = T2.singer_id"
            }
        ],
        "final": {
            "query": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year = 2014",
            "utterance": "What are the names of the singers who performed in a concert in 2014?"
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "how many times each language is spoken in the countries?",
                "query": "SELECT LANGUAGE, count(*) FROM countrylanguage GROUP BY LANGUAGE"
            },
            {
                "utterance": "Give the language that is spoken in the most countries in tb1.",
                "query": "SELECT language FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1",
            "utterance": "Give the language that is spoken in the most countries."
        }
    },
    {
        "database_id": "flight_2",
        "interaction": [
            {
                "utterance": "Which airports have departing or arriving flights",
                "query": "SELECT SourceAirport AS code FROM Flights UNION SELECT DestAirport AS code FROM Flights"
            },
            {
                "utterance": "Which airports are not in tb1?",
                "query": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT code FROM tb1)"
            }
        ],
        "final": {
            "query": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)",
            "utterance": "Which airports do not have departing or arriving flights?"
        }
    },
    {
        "database_id": "wta_1",
        "interaction": [
            {
                "utterance": "what is the number of matches for each winner?",
                "query": "SELECT winner_name , count(*) FROM matches GROUP BY winner_name "
            },
            {
                "utterance": "what is the winner who won the most count?",
                "query": "SELECT winner_name FROM tb1 ORDER BY counter DESC LIMIT 1"
            },
            {
                "utterance": "what is the rank points and name of the winner with name \"value\"?",
                "query": "SELECT T1.winner_name ,  T1.winner_rank_points FROM matches AS T1 JOIN tb2 AS T2 ON T1.winner_name = T2.winner_name"
            }
        ],
        "final": {
            "query": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",
            "utterance": "Find the name and rank points of the winner who won the most times."
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "how many times each language is spoken in the countries?",
                "query": "SELECT LANGUAGE, count(*) FROM countrylanguage GROUP BY LANGUAGE"
            },
            {
                "utterance": "Which language is spoken by the largest number of countries in tb1.",
                "query": "SELECT language FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1",
            "utterance": "Which language is spoken by the largest number of countries?"
        }
    },
    {
        "database_id": "notfound",
        "interaction": [
            {
                "utterance": "which countries tv channels are playing any cartoon written by Todd Casey?",
                "query": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by = 'Todd Casey'"
            },
            {
                "utterance": "Which countries are not in tb1?",
                "query": "SELECT country FROM TV_Channel EXCEPT SELECT country FROM tb1"
            }
        ],
        "final": {
            "query": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by = 'Todd Casey'",
            "utterance": "which countries tv channels are not playing any cartoon written by Todd Casey?"
        }
    },
    {
        "database_id": "network_1",
        "interaction": [
            {
                "utterance": "What are the names of high schoolers who have friends?",
                "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id"
            },
            {
                "utterance": "What are the names of high schoolers who are liked?",
                "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id"
            },
            {
                "utterance": "what are the names in tb1 and tb2?",
                "query": "SELECT T1.name FROM tb1 AS T1 JOIN tb2 AS T2 ON T1.name = T2.name"
            }
        ],
        "final": {
            "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id",
            "utterance": "What are the names of high schoolers who both have friends and are liked?"
        }
    },
    {
        "database_id": "car_1",
        "interaction": [
            {
                "utterance": "what are the continent of car makers?",
                "query": "SELECT T2.continent FROM car_makers AS T1 JOIN COUNTRIES AS T2 ON T1.Country = T2.CountryId"
            },
            {
                "utterance": "how many car makers are there for each continent in tb1?",
                "query": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN tb1 AS T2 ON T1.ContId = T2.continent GROUP BY T1.Continent"
            }
        ],
        "final": {
            "query": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent",
            "utterance": "What is the name of each continent and how many car makers are there in each one?"
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "what is the minimum surface area in the country in Europe?",
                "query": "SELECT min(SurfaceArea) FROM country WHERE Continent = 'Europe'"
            },
            {
                "utterance": "What are the countries that have greater surface area than \"value\"?",
                "query": "SELECT Name FROM country WHERE SurfaceArea  > 'value'"
            }
        ],
        "final": {
            "query": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent = 'Europe')",
            "utterance": "What are the countries that have greater surface area than any country in Europe?"
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "what is the life expectancy for each country in Asia.",
                "query": "SELECT Name, LifeExpectancy FROM country WHERE Continent = 'Asia' "
            },
            {
                "utterance": "what is the name of countries in tb1 with the lowest life expectancy.",
                "query": "SELECT Name FROM tb1 ORDER BY LifeExpectancy LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy LIMIT 1",
            "utterance": "Give the name of the country in Asia with the lowest life expectancy."
        }
    },
    {
        "database_id": "notfound",
        "interaction": [
            {
                "utterance": "what is the id of high schooler Kyle?",
                "query": "SELECT id FROM Highschooler WHERE name = 'Kyle'"
            },
            {
                "utterance": "Show the names of all of the high schooler friends with the id \"value\".",
                "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.friend_id  =  T2.id WHERE T1.student_id = 'value'"
            }
        ],
        "final": {
            "query": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name = 'Kyle'",
            "utterance": "Show the names of all of the high schooler Kyles friends."
        }
    },
    {
        "database_id": "flight_2",
        "interaction": [
            {
                "utterance": "what are the flights depart from City \"Aberdeen\"?",
                "query": "SELECT * FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City = 'Ashley'"
            },
            {
                "utterance": "what are the flights have destination City \"Ashley\"?",
                "query": "SELECT * FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City = 'Aberdeen'"
            },
            {
                "utterance": "How many flights are in tb1 and tb2?",
                "query": ""
            },
            {
                "utterance": "Question7:What is the name of the semester with no students enrolled?",
                "query": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )"
            }
        ],
        "final": {
            "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City = 'Ashley' AND T3.City = 'Aberdeen'",
            "utterance": "How many flights depart from City \"Aberdeen\" and have destination City \"Ashley\"?"
        }
    },
    {
        "database_id": "museum_visit",
        "interaction": [
            {
                "utterance": "what is the id of visitor who bought the most tickets at once?",
                "query": "SELECT visitor_id FROM visit ORDER BY num_of_ticket DESC LIMIT 1"
            },
            {
                "utterance": "Find the name and age of the visitor with id of \"value\".",
                "query": "SELECT t1.name ,  t1.age FROM visitor where id = 'value'"
            }
        ],
        "final": {
            "query": "SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1",
            "utterance": "Find the name and age of the visitor who bought the most tickets at once."
        }
    },
    {
        "database_id": "poker_player",
        "interaction": [
            {
                "utterance": "what is the id of the poker player with the lowest earnings?",
                "query": "SELECT People_ID FROM poker_player ORDER BY Earnings ASC LIMIT 1"
            },
            {
                "utterance": "What is the birth date of the poker player with id as \"value\".",
                "query": "SELECT Birth_Date FROM people WHERE People_ID = 'value'"
            }
        ],
        "final": {
            "query": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1",
            "utterance": "What is the birth date of the poker player with the lowest earnings?"
        }
    },
    {
        "database_id": "car_1",
        "interaction": [
            {
                "utterance": "what is the id of car makers produced in the United States?",
                "query": "SELECT T1.Id FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName = 'usa'"
            },
            {
                "utterance": "what is the conut of car models in tb1?",
                "query": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN tb1 AS T2 ON T1.Maker  =  T2.Id "
            }
        ],
        "final": {
            "query": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName = 'usa'",
            "utterance": "What is the count of the car models produced in the United States?"
        }
    },
    {
        "database_id": "wta_1",
        "interaction": [
            {
                "utterance": "what is the player id who did the most number of tours.",
                "query": "SELECT player_id FROM rankings ORDER BY tours DESC LIMIT 1"
            },
            {
                "utterance": "Find the first name and country code of the player with id \"value\"?",
                "query": "SELECT country_code ,  first_name FROM players WHERE player_id = 'value'"
            }
        ],
        "final": {
            "query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1",
            "utterance": "Find the first name and country code of the player who did the most number of tours."
        }
    },
    {
        "database_id": "dog_kennels",
        "interaction": [
            {
                "utterance": "what is the id of dogs who went through treatments.",
                "query": "SELECT dog_id FROM Treatments "
            },
            {
                "utterance": "Find the average age of the dogs in tb1?",
                "query": "SELECT avg(T1.age) FROM Dogs AS T1 JOIN tb1 AS T2 ON T1.dog_id = T2.dog_id"
            }
        ],
        "final": {
            "query": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
            "utterance": "Find the average age of the dogs who went through treatments."
        }
    },
    {
        "database_id": "network_1",
        "interaction": [
            {
                "utterance": "what is the id and grade of students who have friends?",
                "query": "SELECT T1.student_id, T2.grade FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id"
            },
            {
                "utterance": "what is the average grade of students in tb1?",
                "query": "SELECT avg(grade) FROM tb1"
            }
        ],
        "final": {
            "query": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
            "utterance": "Find the average grade of all students who have some friends."
        }
    },
    {
        "database_id": "student_transcripts_tracking",
        "interaction": [
            {
                "utterance": "what is the id of Bachelor program?",
                "query": "SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name = 'Bachelor'"
            },
            {
                "utterance": "who are enrolled in program with id \"value\"?",
                "query": "SELECT * FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id WHERE T2.degree_program_id = 'value'"
            },
            {
                "utterance": "What are the first, middle, and last names for everybody in tb2. ",
                "query": "SELECT first_name ,  middle_name ,  last_name FROM tb2"
            }
        ],
        "final": {
            "query": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name = 'Bachelor'",
            "utterance": "What are the first, middle, and last names for everybody enrolled in a Bachelors program?"
        }
    },
    {
        "database_id": "student_transcripts_tracking",
        "interaction": [
            {
                "utterance": "How many times can a course enrollment result show in different transcripts? Also show the course enrollment id.",
                "query": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id "
            },
            {
                "utterance": "How many times at most can a course enrollment result show in tb1?",
                "query": "SELECT count(*) ,  student_course_id FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",
            "utterance": "How many times at most can a course enrollment result show in different transcripts? Also show the course enrollment id."
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "Which countries where Chinese is the official language?",
                "query": "SELECT country_code FROM countrylanguage WHERE IsOfficial = 'T' AND Language = 'Chinese'"
            },
            {
                "utterance": "which of tb1 are Asia countries?",
                "query": "SELECT T1.Code FROM country AS T1 JOIN tb1 AS T2 ON T1.Code = T2.CountryCode WHERE Continent = 'Asia'"
            },
            {
                "utterance": "Which unique cities are in tb2.",
                "query": "SELECT T1.Name FROM city AS T1 JOIN tb2 AS T2 ON T1.Code = T2.CountryCode"
            }
        ],
        "final": {
            "query": "SELECT t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial = 't' and t2.language = 'chinese' and t1.continent = 'asia'",
            "utterance": "Which unique cities are in Asian countries where Chinese is the official language ?"
        }
    },
    {
        "database_id": "course_teach",
        "interaction": [
            {
                "utterance": "what is the number of teachers per hometown?",
                "query": "SELECT Hometown, COUNT(*) FROM teacher GROUP BY Hometown"
            },
            {
                "utterance": "what is the most common hometown in tb1?",
                "query": "SELECT Hometown FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1",
            "utterance": "List the most common hometown of teachers."
        }
    },
    {
        "database_id": "course_teach",
        "interaction": [
            {
                "utterance": "what are the courses taught each teacher?",
                "query": "SELECT T2.Course, T1.Teacher_ID FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID"
            },
            {
                "utterance": "what are teachers name for teachers in tb1 in ascending alphabetical order?",
                "query": "SELECT T1.Name, T2.Course FROM teacher AS T1 JOIN tb2 AS T2 ON T1.Teacher_ID = T2.Teacher_ID ORDER BY T1.Name"
            }
        ],
        "final": {
            "query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name",
            "utterance": "What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?"
        }
    },
    {
        "database_id": "car_1",
        "interaction": [
            {
                "utterance": "what is the id of car makers produced in the usa",
                "query": "SELECT T1.Id FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName = 'usa'"
            },
            {
                "utterance": "How many car models are produced in tb1?",
                "query": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN tb1 AS T2 ON T1.Maker  =  T2.Id "
            }
        ],
        "final": {
            "query": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName = 'usa'",
            "utterance": "How many car models are produced in the usa?"
        }
    },
    {
        "database_id": "singer",
        "interaction": [
            {
                "utterance": "what is the number of singers for each citizenship?",
                "query": "SELECT citizenship, count(*) from singer group by citizenship"
            },
            {
                "utterance": "Please show the most common citizenship of singers in tb1?",
                "query": "SELECT citizenship from tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1",
            "utterance": "Please show the most common citizenship of singers."
        }
    },
    {
        "database_id": "network_1",
        "interaction": [
            {
                "utterance": "Show names of all high school students who have any friends.",
                "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id"
            },
            {
                "utterance": "Show names of all high school students who are not in tb1?",
                "query": "SELECT name FROM Highschooler EXCEPT SELECT name FROM tb1"
            }
        ],
        "final": {
            "query": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id",
            "utterance": "Show names of all high school students who do not have any friends."
        }
    },
    {
        "database_id": "network_1",
        "interaction": [
            {
                "utterance": "How many times each grade given to students",
                "query": "SELECT grade, count(*) FROM Highschooler GROUP BY grade"
            },
            {
                "utterance": "Return the grade that has the greatest number of high schoolers in tb1.",
                "query": "SELECT grade FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1",
            "utterance": "Return the grade that has the greatest number of high schoolers."
        }
    },
    {
        "database_id": "wta_1",
        "interaction": [
            {
                "utterance": "what is the player id of the player with the most winner rank points across all matches?",
                "query": "SELECT  winner_id FROM  matches ORDER BY winner_rank_points DESC LIMIT 1"
            },
            {
                "utterance": "What is the first name, country code, and birth date of the player with player id = \"value\"?",
                "query": "SELECT first_name ,  country_code ,  birth_date FROM players WHERE player_id = 'value'"
            }
        ],
        "final": {
            "query": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",
            "utterance": "What is the first name, country code, and birth date of the player with the most winner rank points across all matches?"
        }
    },
    {
        "database_id": "tvshow",
        "interaction": [
            {
                "utterance": "hown many times each language used by TV Channels.",
                "query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE"
            },
            {
                "utterance": "List the language used least number of TV Channel in tb1. List language and number of TV Channel.",
                "query": "SELECT LANGUAGE ,  count(*) FROM tb1 ORDER BY counter ASC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1",
            "utterance": "List the language used least number of TV Channel. List language and number of TV Channel."
        }
    },
    {
        "database_id": "flight_2",
        "interaction": [
            {
                "utterance": "what are the flights landing in the city of Aberdeen?",
                "query": "SELECT * FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city = 'Aberdeen'"
            },
            {
                "utterance": "what are the flights landing in the city of Abilene?",
                "query": "SELECT * FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city =  'Abilene'"
            },
            {
                "utterance": "what are the flights in tb1 or tb2?",
                "query": "SELECT * FROM tb1 AS T1 UNION SELECT * FROM tb2"
            },
            {
                "utterance": "what are the number of flights in tb3?",
                "query": "SELECT count(*) FROM tb3"
            }
        ],
        "final": {
            "query": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city = 'Aberdeen' OR T2.city = 'Abilene'",
            "utterance": "Find the number of flights landing in the city of Aberdeen or Abilene."
        }
    },
    {
        "database_id": "cre_Doc_Template_Mgt",
        "interaction": [
            {
                "utterance": "Show the document id with paragraph text \"Brazil\"",
                "query": "SELECT document_id FROM Paragraphs WHERE paragraph_text = 'Brazil' "
            },
            {
                "utterance": "Show the document id with paragraph text \"Ireland\".",
                "query": "SELECT document_id FROM Paragraphs WHERE paragraph_text = 'Ireland'"
            },
            {
                "utterance": "Show the document id in both tb1 and tb2.",
                "query": "SELECT document_id FROM tb1 AS T1 JOIN tb2 AS T2 ON T1.document_id = T2.document_id"
            }
        ],
        "final": {
            "query": "SELECT document_id FROM Paragraphs WHERE paragraph_text = 'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text = 'Ireland'",
            "utterance": "Show the document id with paragraph text \"Brazil\" and \"Ireland\"."
        }
    },
    {
        "database_id": "notfound",
        "interaction": [
            {
                "utterance": "what is id with the highest mpg?",
                "query": "SELECT Id FROM CARS_DATA ORDER BY mpg DESC LIMIT 1"
            },
            {
                "utterance": "what is the model with the id \"value\"?",
                "query": "SELECT Model FROM CAR_NAMES WHERE MakeId = 'value'"
            }
        ],
        "final": {
            "query": "SELECT t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1",
            "utterance": " What is the car model with the highest mpg ?"
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "Which regions speak English?",
                "query": "Which regions speak Dutch?"
            },
            {
                "utterance": "SELECT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\"",
                "query": "Which regions are in tb1 or tb2?"
            },
            {
                "utterance": "SELECT Region FROM tb1 UNION SELECT Region FROM tb2",
                "query": ""
            },
            {
                "utterance": "Question8:What is the first name and country code of the player with the most tours?",
                "query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  'English' OR T2.Language = 'Dutch'",
            "utterance": "Which regions speak Dutch or English?"
        }
    },
    {
        "database_id": "notfound",
        "interaction": [
            {
                "utterance": "SELECT country_code ,  first_name FROM players WHERE player_id = \"value\"",
                "query": ""
            }
        ],
        "final": {
            "query": "SELECT player_id FROM rankings ORDER BY tours DESC LIMIT 1",
            "utterance": "what is the player id with the most tours?"
        }
    },
    {
        "database_id": "cre_Doc_Template_Mgt",
        "interaction": [
            {
                "utterance": "what is number of templates per template type code?",
                "query": "SELECT template_type_code, count(*) FROM Templates GROUP BY template_type_code "
            },
            {
                "utterance": "Return the type code of the template type that the most templates count belong to.",
                "query": "SELECT template_type_code FROM tb1 ORDER BY count(*) DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1",
            "utterance": "Return the type code of the template type that the most templates belong to."
        }
    },
    {
        "database_id": "course_teach",
        "interaction": [
            {
                "utterance": "what is the id of the math course?",
                "query": "SELECT Course_ID FROM course WHERE Course = 'Math'"
            },
            {
                "utterance": "what are ids of teachers who have courses in tb1?",
                "query": "SELECT Teacher_ID FROM course_arrange WHERE Course_ID = 'value'"
            },
            {
                "utterance": "What are the names of the people who teach in tb2.",
                "query": "SELECT T1.Name FROM teacher AS T1 JOIN tb2 AS T2 ON T1.Teacher_ID = T2.Teacher_ID"
            }
        ],
        "final": {
            "query": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course = 'Math'",
            "utterance": "What are the names of the people who teach math courses?"
        }
    },
    {
        "database_id": "poker_player",
        "interaction": [
            {
                "utterance": "what is the id of the poker player with the lowest earnings?",
                "query": "SELECT People_ID FROM poker_player ORDER BY Earnings ASC LIMIT 1"
            },
            {
                "utterance": "Return the birth date of the poker player with id as \"value\".",
                "query": "SELECT Birth_Date FROM people WHERE People_ID = 'value'"
            }
        ],
        "final": {
            "query": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1",
            "utterance": "Return the birth date of the poker player with the lowest earnings."
        }
    },
    {
        "database_id": "dog_kennels",
        "interaction": [
            {
                "utterance": "what is the id of dogs who have gone through any treatments?",
                "query": "SELECT dog_id FROM Treatments "
            },
            {
                "utterance": "what is the average age of dogs in tb1?",
                "query": "SELECT avg(T1.age) FROM Dogs AS T1 JOIN tb1 AS T2 ON T1.dog_id = T2.dog_id"
            }
        ],
        "final": {
            "query": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )",
            "utterance": "What is the average age of the dogs who have gone through any treatments?"
        }
    },
    {
        "database_id": "notfound",
        "interaction": [
            {
                "utterance": "what is the average number of products?",
                "query": "SELECT avg(number_products) FROM shop"
            },
            {
                "utterance": "Which shops number products is above the \"value\". Give me the shop names.",
                "query": "SELECT name FROM shop WHERE number_products  > 'value'"
            }
        ],
        "final": {
            "query": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)",
            "utterance": "Which shops number products is above the average? Give me the shop names."
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "what are the countries in the continent of North America that have a surface area greater than 3000?",
                "query": "SELECT * from country where continent = 'north america' and surfacearea > 3000"
            },
            {
                "utterance": "what are the total population and average surface area of countries in tb1?",
                "query": "SELECT sum(population) ,  avg(surfacearea) from tb1"
            }
        ],
        "final": {
            "query": "SELECT sum(population) ,  avg(surfacearea) from country where continent = 'north america' and surfacearea > 3000",
            "utterance": "Give the total population and average surface area corresponding to countries in North America that have a surface area greater than 3000 ."
        }
    },
    {
        "database_id": "singer",
        "interaction": [
            {
                "utterance": "What is the sname of every sing that has any song?",
                "query": "SELECT Singer_ID FROM song"
            },
            {
                "utterance": "What is the sname of every sing that is not in tb1?",
                "query": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM tb1)"
            }
        ],
        "final": {
            "query": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)",
            "utterance": "What is the sname of every sing that does not have any song?"
        }
    },
    {
        "database_id": "notfound",
        "interaction": [
            {
                "utterance": "what is the id of the employee who got the highest one time bonus.",
                "query": "SELECT Employee_ID FROM evaluation ORDER By bonus DESC LIMIT 1"
            },
            {
                "utterance": "Which employee received the biggest bonus? Give me the employee name.",
                "query": "SELECT name FROM employee WHERE Employee_ID = 'value'"
            }
        ],
        "final": {
            "query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1",
            "utterance": " Which employee received the biggest bonus? Give me the employee name."
        }
    },
    {
        "database_id": "notfound",
        "interaction": [
            {
                "utterance": "what are the courses that they are arranged to teach by each teacher?",
                "query": "SELECT T2.Course, T1.Teacher_ID FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID"
            },
            {
                "utterance": "Show names of teachers in tb1 in ascending alphabetical order?",
                "query": "SELECT T1.Name, T2.Course FROM teacher AS T1 JOIN tb2 AS T2 ON T1.Teacher_ID = T2.Teacher_ID ORDER BY T1.Name"
            }
        ],
        "final": {
            "query": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name",
            "utterance": "Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teachers name."
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "what is the minimum surface area in the country in Europe?",
                "query": "SELECT min(SurfaceArea) FROM country WHERE Continent = 'Europe'"
            },
            {
                "utterance": "Which countries have greater area than that than \"value\"?",
                "query": "SELECT Name FROM country WHERE SurfaceArea  > 'value'"
            }
        ],
        "final": {
            "query": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent = 'Europe')",
            "utterance": "Which countries have greater area than that of any country in Europe?"
        }
    },
    {
        "database_id": "wta_1",
        "interaction": [
            {
                "utterance": "What are the names of players who won in 2013?",
                "query": "SELECT winner_name FROM matches WHERE YEAR = 2013"
            },
            {
                "utterance": "What are the names of players who won in 2016?",
                "query": "SELECT winner_name FROM matches WHERE YEAR = 2016"
            },
            {
                "utterance": "What are the names of players in both tb1 and tb2?",
                "query": "SELECT winner_name FROM tb1 INTERSECT SELECT winner_name FROM tb2"
            }
        ],
        "final": {
            "query": "SELECT winner_name FROM matches WHERE YEAR = 2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR = 2016",
            "utterance": "What are the names of players who won in both 2013 and 2016?"
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "what are the asian countries?",
                "query": "SELECT * FROM country WHERE Continent = 'Asia'"
            },
            {
                "utterance": "What are the name, population, and life expectancy of the largest country by land in tb1?",
                "query": "SELECT Name ,  Population ,  LifeExpectancy FROM tb1 ORDER BY SurfaceArea DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent = 'Asia' ORDER BY SurfaceArea DESC LIMIT 1",
            "utterance": "What are the name, population, and life expectancy of the largest Asian country by land?"
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "what is the code of countries with a republic government?",
                "query": "SELECT Code FROM country WHERE GovernmentForm  =  'Republic' "
            },
            {
                "utterance": "what are the number of countries for each language in tb1?",
                "query": "SELECT T2.language, count(*) FROM tb1 AS T1 JOIN countrylanguage AS T2  T1.Code  =  T2.CountryCode GROUP BY T2.Language"
            },
            {
                "utterance": "which language has the count of 1 in tb2?",
                "query": "SELECT language FROM tb2 WHERE counter = 1"
            }
        ],
        "final": {
            "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  'Republic' GROUP BY T2.Language HAVING COUNT(*) = 1",
            "utterance": "What languages are only used by a single country with a republic government?"
        }
    },
    {
        "database_id": "car_1",
        "interaction": [
            {
                "utterance": "how many version(make) are there for each car?",
                "query": "SELECT Model, count(*) FROM CAR_NAMES GROUP BY Model"
            },
            {
                "utterance": "Which model has the most version(make) of cars in tb1?",
                "query": "SELECT Model FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1",
            "utterance": "Which model has the most version(make) of cars?"
        }
    },
    {
        "database_id": "orchestra",
        "interaction": [
            {
                "utterance": "what is the number of orchestras for each record company?",
                "query": "SELECT Record_Company, count(*) FROM orchestra GROUP BY Record_Company"
            },
            {
                "utterance": "what is the record company with the greatest number of orchestras count.",
                "query": "SELECT Record_Company FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1",
            "utterance": "What is the record company used by the greatest number of orchestras?"
        }
    },
    {
        "database_id": "tvshow",
        "interaction": [
            {
                "utterance": "What are the channels directed by Ben Jones?",
                "query": "SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones'"
            },
            {
                "utterance": "What are the ids of the TV channels that are not in tb1?",
                "query": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM tb1"
            }
        ],
        "final": {
            "query": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones'",
            "utterance": "What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?"
        }
    },
    {
        "database_id": "network_1",
        "interaction": [
            {
                "utterance": "What are the names of students who have friends?",
                "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id"
            },
            {
                "utterance": "What are the names of students who are not in tb1?",
                "query": "SELECT name FROM Highschooler EXCEPT SELECT name FROM tb1"
            }
        ],
        "final": {
            "query": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id",
            "utterance": "What are the names of students who have no friends?"
        }
    },
    {
        "database_id": "tvshow",
        "interaction": [
            {
                "utterance": "List the country and number of TV Channels it has.",
                "query": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country"
            },
            {
                "utterance": "Which country has the most of TV Channels in tb1?",
                "query": "SELECT Country ,  count(*) FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1",
            "utterance": "Which country has the most of TV Channels? List the country and number of TV Channels it has."
        }
    },
    {
        "database_id": "cre_Doc_Template_Mgt",
        "interaction": [
            {
                "utterance": "what is the number of paragraphs for each document?",
                "query": "SELECT document_id, count(*) FROM Paragraphs GROUP BY document_id "
            },
            {
                "utterance": "Return the id of the document with the least paragraphs count?",
                "query": "SELECT document_id FROM tb1 ORDER BY counter ASC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1",
            "utterance": "What is the document id with least number of paragraphs?"
        }
    },
    {
        "database_id": "dog_kennels",
        "interaction": [
            {
                "utterance": "Find the states where owners live.",
                "query": "SELECT state FROM Owners"
            },
            {
                "utterance": "Find the states where professionals live.",
                "query": "SELECT state FROM Professionals"
            },
            {
                "utterance": "Find the states both in tb1 and tb2?",
                "query": "SELECT T1.states FROM tb1 AS T1 JOIN tb2 AS T2 ON T1.states = T2.states"
            }
        ],
        "final": {
            "query": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals",
            "utterance": "Find the states where both owners and professionals live."
        }
    },
    {
        "database_id": "concert_singer",
        "interaction": [
            {
                "utterance": "What are the names of the stadiums with concerts?",
                "query": "SELECT stadium_id FROM concert"
            },
            {
                "utterance": "What are the names of the stadiums not in tb1?",
                "query": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM tb1"
            }
        ],
        "final": {
            "query": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
            "utterance": "What are the names of the stadiums without any concerts?"
        }
    },
    {
        "database_id": "singer",
        "interaction": [
            {
                "utterance": "List the name of singers that who has any songs.",
                "query": "SELECT Singer_ID FROM song"
            },
            {
                "utterance": "List the name of singers that is not in tb1?",
                "query": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM tb1)"
            }
        ],
        "final": {
            "query": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)",
            "utterance": "List the name of singers that do not have any song."
        }
    },
    {
        "database_id": "pets_1",
        "interaction": [
            {
                "utterance": "what are the id of cat pet?",
                "query": "SELECT petid FROM pets WHERE pettype = 'cat'"
            },
            {
                "utterance": "what are the id of students who have pets with id \"value\"?",
                "query": "SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T2.stuid = 'value'"
            },
            {
                "utterance": "what are studets not in tb2?",
                "query": "SELECT stuid FROM student EXCEPT SELECT stuid FROM tb2"
            }
        ],
        "final": {
            "query": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype = 'cat'",
            "utterance": "Find the id of students who do not have a cat pet."
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "Return the country codes for countries that speak English.",
                "query": "SELECT CountryCode FROM countrylanguage WHERE LANGUAGE = 'English'"
            },
            {
                "utterance": "Return the country codes for countries that are not in tb1.",
                "query": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM tb1"
            }
        ],
        "final": {
            "query": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE = 'English'",
            "utterance": "Return the country codes for countries that do not speak English."
        }
    },
    {
        "database_id": "orchestra",
        "interaction": [
            {
                "utterance": "Show the record companies shared by orchestras founded before 2003?",
                "query": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003"
            },
            {
                "utterance": "Show the record companies shared by orchestras after 2003?",
                "query": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003"
            },
            {
                "utterance": "what are the companies in both tb1 and tb2?",
                "query": "SELECT Record_Company FROM tb1 AS T1 JOIN tb2 AS T1.Record_Company = T2.Record_Company"
            }
        ],
        "final": {
            "query": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003",
            "utterance": "Show the record companies shared by orchestras founded before 2003 and after 2003."
        }
    },
    {
        "database_id": "flight_2",
        "interaction": [
            {
                "utterance": "Find the name of airports have any flight in and out.",
                "query": "SELECT SourceAirport AS code FROM Flights UNION SELECT DestAirport AS code FROM Flights"
            },
            {
                "utterance": "Find the name of airports which are not in tb1?",
                "query": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT code FROM tb1)"
            }
        ],
        "final": {
            "query": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)",
            "utterance": "Find the name of airports which do not have any flight in and out."
        }
    },
    {
        "database_id": "poker_player",
        "interaction": [
            {
                "utterance": "what are the number of people per nationality?",
                "query": "SELECT Nationality, count(*) FROM people GROUP BY Nationality"
            },
            {
                "utterance": "What is the most common nationality of people in tb1.",
                "query": "SELECT Nationality FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
            "utterance": "What is the most common nationality of people?"
        }
    },
    {
        "database_id": "concert_singer",
        "interaction": [
            {
                "utterance": "what is the stadium with the highest capacity.",
                "query": "SELECT stadium_id from stadium order by capacity desc limit 1"
            },
            {
                "utterance": "Find the number of concerts happened in the stadium with student_id of \"value\".",
                "query": "SELECT count(*) from concert where stadium_id = 'value'"
            }
        ],
        "final": {
            "query": "SELECT count(*) from concert where stadium_id = (SELECT stadium_id from stadium order by capacity desc limit 1)",
            "utterance": "Find the number of concerts happened in the stadium with the highest capacity."
        }
    },
    {
        "database_id": "cre_Doc_Template_Mgt",
        "interaction": [
            {
                "utterance": "What are the ids of documents that contain the paragraph text \"Brazil\"",
                "query": "SELECT document_id FROM Paragraphs WHERE paragraph_text = 'Brazil' "
            },
            {
                "utterance": "What are the ids of documents that contain the paragraph text  \"Ireland\".",
                "query": "SELECT document_id FROM Paragraphs WHERE paragraph_text = 'Ireland'"
            },
            {
                "utterance": "What are the ids of documents that contain the paragraph in both tb1 and tb2.",
                "query": "SELECT document_id FROM tb1 AS T1 JOIN tb2 AS T2 ON T1.document_id = T2.document_id"
            }
        ],
        "final": {
            "query": "SELECT document_id FROM Paragraphs WHERE paragraph_text = 'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text = 'Ireland'",
            "utterance": "What are the ids of documents that contain the paragraph text \"Brazil\" and \"Ireland\"?"
        }
    },
    {
        "database_id": "cre_Doc_Template_Mgt",
        "interaction": [
            {
                "utterance": "Show all template type codes that are used by documents.",
                "query": "SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id"
            },
            {
                "utterance": "Show all template type codes that are not in tb1.",
                "query": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM tb1"
            }
        ],
        "final": {
            "query": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id",
            "utterance": "Show all template type codes that are not used by any document."
        }
    },
    {
        "database_id": "notfound",
        "interaction": [
            {
                "utterance": "what are the flights from Aberdeen?",
                "query": "SELECT * FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City = 'Ashley'"
            },
            {
                "utterance": "what are the flights to Ashley?",
                "query": "SELECT * FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City = 'Aberdeen'"
            },
            {
                "utterance": "How many flights are in tb1 and tb2?",
                "query": ""
            },
            {
                "utterance": "Question1: Show names for all stadiums except for stadiums having a concert in year 2014.",
                "query": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year = 2014"
            }
        ],
        "final": {
            "query": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City = 'Ashley' AND T3.City = 'Aberdeen'",
            "utterance": "Question22How many flights fly from Aberdeen to Ashley?"
        }
    },
    {
        "database_id": "notfound",
        "interaction": [
            {
                "utterance": "SELECT T1.name FROM stadium AS T1 JOIN tb1 AS T2 ON T1.student_id = T2.student_id",
                "query": "Show names for all stadiums except for stadiums in tb2."
            },
            {
                "utterance": "SELECT name FROM stadium EXCEPT SELECT name FROM tb2",
                "query": ""
            }
        ],
        "final": {
            "query": "SELECT student_id FROM concert WHERE year = 2014",
            "utterance": "what are concerts in year 2014?"
        }
    },
    {
        "database_id": "pets_1",
        "interaction": [
            {
                "utterance": "what is the id of students who raise dog pets?",
                "query": "SELECT T1.stuid FROM has_pet AS T1 JOIN pets AS T2 ON T1.petid=T2.petid WHERE T2.pettype = 'dog'"
            },
            {
                "utterance": "How many dog pets are raised by female students in tb1?",
                "query": "SELECT count(*) FROM student AS T1 JOIN tb1 AS T2 ON T1.stuid  =  T2.stuid  WHERE T1.sex = 'F'"
            }
        ],
        "final": {
            "query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex = 'F' AND T3.pettype = 'dog'",
            "utterance": "How many dog pets are raised by female students?"
        }
    },
    {
        "database_id": "notfound",
        "interaction": [
            {
                "utterance": "What is the number of times that a course shows up in different transcripts and what is that courses enrollment id?",
                "query": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id "
            },
            {
                "utterance": "What is the maximum number of times that a course shows up in tb1?",
                "query": "SELECT count(*) ,  student_course_id FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",
            "utterance": "What is the maximum number of times that a course shows up in different transcripts and what is that courses enrollment id?"
        }
    },
    {
        "database_id": "battle_death",
        "interaction": [
            {
                "utterance": "what are number of people killed in total for each battle.",
                "query": "SELECT T1.lost_in_battle, sum(T2.killed) ship AS T1 JOIN death AS T2 ON T1.id  =  T2.caused_by_ship_id GROUP BY T2.lost_in_battle"
            },
            {
                "utterance": "What are the ids and names of the battles that led to more than 10 people killed in tb1?",
                "query": "SELECT T1.id ,  T1.name FROM battle AS T1 JOIN tb1 AS T2 ON T1.id  =  T2.lost_in_battle WHERE summation > 10"
            }
        ],
        "final": {
            "query": "SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed) > 10",
            "utterance": "What are the ids and names of the battles that led to more than 10 people killed in total."
        }
    },
    {
        "database_id": "car_1",
        "interaction": [
            {
                "utterance": "how many versions are there for each car?",
                "query": "SELECT Model, count(*) FROM CAR_NAMES GROUP BY Model"
            },
            {
                "utterance": "What model has the most different versions in tb1?",
                "query": "SELECT Model FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1",
            "utterance": "What model has the most different versions?"
        }
    },
    {
        "database_id": "car_1",
        "interaction": [
            {
                "utterance": "What are the names of the countries with car makers?",
                "query": "SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country"
            },
            {
                "utterance": "What are the names of the countries are not in tb1?",
                "query": "SELECT CountryName FROM countries EXCEPT SELECT CountryName FROM tb1"
            }
        ],
        "final": {
            "query": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country",
            "utterance": "What are the names of the countries with no car makers?"
        }
    },
    {
        "database_id": "tvshow",
        "interaction": [
            {
                "utterance": "What are the tv channels play cartoon directed by Ben Jones?",
                "query": "SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones'"
            },
            {
                "utterance": "find the id of tv channels that are not in tb1?",
                "query": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM tb1"
            }
        ],
        "final": {
            "query": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones'",
            "utterance": "find the id of tv channels that do not play any cartoon directed by Ben Jones."
        }
    },
    {
        "database_id": "car_1",
        "interaction": [
            {
                "utterance": "What are the names of the countries where there more than a single car maker?",
                "query": "SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country"
            },
            {
                "utterance": "What are the names of the countries are not in tb1?",
                "query": "SELECT CountryName FROM countries EXCEPT SELECT CountryName FROM tb1"
            }
        ],
        "final": {
            "query": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country",
            "utterance": "What are the name of the countries where there is not a single car maker?"
        }
    },
    {
        "database_id": "network_1",
        "interaction": [
            {
                "utterance": "Show ids of all students who have friends.",
                "query": "SELECT student_id FROM Friend"
            },
            {
                "utterance": "Show ids of all students who are not in tb1?",
                "query": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM tb1"
            }
        ],
        "final": {
            "query": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend",
            "utterance": "Show ids of all students who do not have any friends."
        }
    },
    {
        "database_id": "car_1",
        "interaction": [
            {
                "utterance": "what is the accelerate of the car with the largest horsepower?",
                "query": "SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1"
            },
            {
                "utterance": "How many cars have a larger accelerate than the car with the lhorsepower \"value\"?",
                "query": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  > 'value'"
            }
        ],
        "final": {
            "query": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 )",
            "utterance": "How many cars have a larger accelerate than the car with the largest horsepower?"
        }
    },
    {
        "database_id": "pets_1",
        "interaction": [
            {
                "utterance": "what are the ids of cats that is 3 years old. ",
                "query": "SELECT petid FROM pets WHERE pet_age = 3 AND pettype = 'cat'."
            },
            {
                "utterance": "what are the student ids who has the pets in tb1.",
                "query": "SELECT T1.stuid FROM has_pet AS T1 JOIN tb1 AS T2 ON T1.petid  =  T2.petid"
            },
            {
                "utterance": "What is the last name of the student in the tb2.",
                "query": "SELECT T1.lname FROM student AS T1 JOIN tb2 AS T2 ON T1.stuid  =  T2.stuid"
            }
        ],
        "final": {
            "query": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age = 3 AND T3.pettype = 'cat'",
            "utterance": "What is the last name of the student who has a cat that is 3 years old?"
        }
    },
    {
        "database_id": "poker_player",
        "interaction": [
            {
                "utterance": "what are the number of people per nationality?",
                "query": "SELECT Nationality, count(*) FROM people GROUP BY Nationality"
            },
            {
                "utterance": "Give the nationality that is most common in tb1.",
                "query": "SELECT Nationality FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
            "utterance": "Give the nationality that is most common across all people."
        }
    },
    {
        "database_id": "network_1",
        "interaction": [
            {
                "utterance": "What are the ids of students who have friends?",
                "query": "SELECT student_id FROM Friend"
            },
            {
                "utterance": "What are the ids of students who are liked?",
                "query": "SELECT liked_id FROM Likes"
            },
            {
                "utterance": "whar are the ids that are in tb1 and tb2.",
                "query": "SELECT student_id FROM tb1 AS T1 JOIN liked_id FROM tb2 AS T2 ON T1.student_id = T2.liked_id"
            }
        ],
        "final": {
            "query": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes",
            "utterance": "What are the ids of students who both have friends and are liked?"
        }
    },
    {
        "database_id": "real_estate_properties",
        "interaction": [
            {
                "utterance": "What are the names of properties that are houses?",
                "query": "SELECT property_name FROM Properties WHERE property_type_code = 'House'"
            },
            {
                "utterance": "What are the names of properties that are apartments with more than 1 room?",
                "query": "SELECT property_name FROM Properties WHERE property_type_code = 'Apartment' AND room_count > 1"
            },
            {
                "utterance": "What are the names of properties that are either in tb1 or tb2?",
                "query": "SELECT property_name FROM tb1 UNION SELECT property_name FROM tb2 "
            }
        ],
        "final": {
            "query": "SELECT property_name FROM Properties WHERE property_type_code = 'House' UNION SELECT property_name FROM Properties WHERE property_type_code = 'Apartment' AND room_count > 1",
            "utterance": "What are the names of properties that are either houses or apartments with more than 1 room?"
        }
    },
    {
        "database_id": "wta_1",
        "interaction": [
            {
                "utterance": "List the names of all winners who played in 2013.",
                "query": "SELECT winner_name FROM matches WHERE YEAR = 2013"
            },
            {
                "utterance": "List the names of all winners who played in 2016.",
                "query": "SELECT winner_name FROM matches WHERE YEAR = 2016"
            },
            {
                "utterance": "List the names of all winners in both tb1 and tb2?",
                "query": "SELECT winner_name FROM tb1 INTERSECT SELECT winner_name FROM tb2"
            }
        ],
        "final": {
            "query": "SELECT winner_name FROM matches WHERE YEAR = 2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR = 2016",
            "utterance": "List the names of all winners who played in both 2013 and 2016."
        }
    },
    {
        "database_id": "pets_1",
        "interaction": [
            {
                "utterance": "what is the id of students who raise dog pets?",
                "query": "SELECT T1.stuid FROM has_pet AS T1 JOIN pets AS T2 ON T1.petid=T2.petid WHERE T2.pettype = 'dog'"
            },
            {
                "utterance": "Find the number of dog pets that are raised by female students (with sex F) in tb1?",
                "query": "SELECT count(*) FROM student AS T1 JOIN tb1 AS T2 ON T1.stuid  =  T2.stuid  WHERE T1.sex = 'F'"
            }
        ],
        "final": {
            "query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex = 'F' AND T3.pettype = 'dog'",
            "utterance": "Find the number of dog pets that are raised by female students (with sex F)."
        }
    },
    {
        "database_id": "car_1",
        "interaction": [
            {
                "utterance": "what are the continent of car makers?",
                "query": "SELECT T2.continent FROM car_makers AS T1 JOIN COUNTRIES AS T2 ON T1.Country = T2.CountryId"
            },
            {
                "utterance": "how many car makers are there in each continent in tb1?",
                "query": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN tb1 AS T2 ON T1.ContId = T2.continent GROUP BY T1.Continent"
            }
        ],
        "final": {
            "query": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent",
            "utterance": "How many car makers are there in each continents? List the continent name and the count."
        }
    },
    {
        "database_id": "tvshow",
        "interaction": [
            {
                "utterance": "hown many times each language used by TV Channels.",
                "query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE"
            },
            {
                "utterance": "What are the languages used by the least number of TV Channels in tb1 and how many channels use it.",
                "query": "SELECT LANGUAGE ,  count(*) FROM tb1 ORDER BY counter ASC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1",
            "utterance": "What are the languages used by the least number of TV Channels and how many channels use it?"
        }
    },
    {
        "database_id": "notfound",
        "interaction": [
            {
                "utterance": "What are the countries that are playing cartoons written by Todd Casey?",
                "query": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by = 'Todd Casey'"
            },
            {
                "utterance": "What are the countries are not in tb1?",
                "query": "SELECT country FROM TV_Channel EXCEPT SELECT country FROM tb1"
            }
        ],
        "final": {
            "query": "Question1:What are the countries that are not playing cartoons written by Todd Casey?",
            "utterance": ""
        }
    },
    {
        "database_id": "wta_1",
        "interaction": [
            {
                "utterance": "what is the player id of the winner who has the highest rank points in all matches.",
                "query": "SELECT  winner_id FROM  matches ORDER BY winner_rank_points DESC LIMIT 1"
            },
            {
                "utterance": "What is the first name, country code, and birth date of the player with player id = \"value\"?",
                "query": "SELECT first_name ,  country_code ,  birth_date FROM players WHERE player_id = 'value'"
            }
        ],
        "final": {
            "query": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",
            "utterance": "Find the first name, country code and birth date of the winner who has the highest rank points in all matches."
        }
    },
    {
        "database_id": "wta_1",
        "interaction": [
            {
                "utterance": "what is the number of matches for each year?",
                "query": "SELECT YEAR, count(*) FROM matches GROUP BY YEAR"
            },
            {
                "utterance": "Find the year that has the most number of matches in tb1.",
                "query": "SELECT YEAR FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1",
            "utterance": "Find the year that has the most number of matches."
        }
    },
    {
        "database_id": "student_transcripts_tracking",
        "interaction": [
            {
                "utterance": "What are the first names of the students who live in Haiti permanently?",
                "query": "SELECT t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country = 'haiti'"
            },
            {
                "utterance": "What are the first names of the students who have the cell phone number 09700166582?  ",
                "query": "SELECT first_name from students WHERE cell_mobile_number = '09700166582'"
            },
            {
                "utterance": "what are the students are in tb1 or tb2?",
                "query": "SELECT first_name FROM tb1 UNION SELECT first_name FROM tb2"
            }
        ],
        "final": {
            "query": "SELECT t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country = 'haiti' or t1.cell_mobile_number = '09700166582'",
            "utterance": "What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582 ?"
        }
    },
    {
        "database_id": "course_teach",
        "interaction": [
            {
                "utterance": "what is the number of teachers per hometown?",
                "query": "SELECT Hometown, COUNT(*) FROM teacher GROUP BY Hometown"
            },
            {
                "utterance": "What is the most commmon hometowns for teachers in tb1?",
                "query": "SELECT Hometown FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1",
            "utterance": "What is the most commmon hometowns for teachers?"
        }
    },
    {
        "database_id": "concert_singer",
        "interaction": [
            {
                "utterance": "what is the stadium with the largest capacity?",
                "query": "SELECT stadium_id from stadium order by capacity desc limit 1"
            },
            {
                "utterance": "What are the number of concerts that occurred in the stadium with the id of \"value\".",
                "query": "SELECT count(*) from concert where stadium_id = 'value'"
            }
        ],
        "final": {
            "query": "SELECT count(*) from concert where stadium_id = (SELECT stadium_id from stadium order by capacity desc limit 1)",
            "utterance": "What are the number of concerts that occurred in the stadium with the largest capacity?"
        }
    },
    {
        "database_id": "tvshow",
        "interaction": [
            {
                "utterance": "what is the number of TV Channels for each country?",
                "query": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country"
            },
            {
                "utterance": "What is the country with the most number of TV Channels and how many does it have in tb1?",
                "query": "SELECT Country ,  count(*) FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1",
            "utterance": "What is the country with the most number of TV Channels and how many does it have?"
        }
    },
    {
        "database_id": "wta_1",
        "interaction": [
            {
                "utterance": "what is the number of players for each country?",
                "query": "SELECT country_code, count(*) GROUP BY country_code"
            },
            {
                "utterance": "find the code of the country where has the greatest number of players count.",
                "query": "SELECT country_code FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1",
            "utterance": "find the code of the country where has the greatest number of players."
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "What are the codes of the countries that do not speak English?",
                "query": "SELECT CountryCode FROM countrylanguage WHERE LANGUAGE != 'English'"
            },
            {
                "utterance": "What are the codes of the countries that do not have Republics for governments.",
                "query": "SELECT Code FROM country WHERE GovernmentForm != 'Republic'"
            },
            {
                "utterance": "what are the countries in both tb1 and tb2?",
                "query": "SELECT CountryCode FROM tb1 INTERSECT SELECT Code FROM tb2"
            }
        ],
        "final": {
            "query": "SELECT Code FROM country WHERE GovernmentForm != 'Republic' EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE = 'English'",
            "utterance": "Return the codes of countries that do not speak English and do not have Republics for governments."
        }
    },
    {
        "database_id": "tvshow",
        "interaction": [
            {
                "utterance": "what are the tv channels playing any cartoons directed by Ben Jones?",
                "query": "SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones'"
            },
            {
                "utterance": "find the package option of the tv channel that are not in tb1?",
                "query": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon)"
            }
        ],
        "final": {
            "query": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones')",
            "utterance": "find the package option of the tv channel that do not have any cartoon directed by Ben Jones."
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "What are the country codes for countries that speak English?",
                "query": "SELECT CountryCode FROM countrylanguage WHERE LANGUAGE = 'English'"
            },
            {
                "utterance": "What are the country codes for countries that are not in tb1.",
                "query": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM tb1"
            }
        ],
        "final": {
            "query": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE = 'English'",
            "utterance": "What are the country codes for countries that do not speak English?"
        }
    },
    {
        "database_id": "notfound",
        "interaction": [
            {
                "utterance": "what is the id of the poker player with greatest height?",
                "query": "SELECT Height FROM poker_player ORDER BY Height DESC LIMIT 1"
            },
            {
                "utterance": "what is money rank of the id \"value\"?",
                "query": "SELECT Money_Rank FROM people WHERE People_ID == 'value'"
            }
        ],
        "final": {
            "query": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1",
            "utterance": " Return the money rank of the poker player with the greatest height."
        }
    },
    {
        "database_id": "notfound",
        "interaction": [
            {
                "utterance": "what is the average weight of the cars?",
                "query": "SELECT avg(Weight) FROM CARS_DATA"
            },
            {
                "utterance": "Find the model of the car whose weight is below the \"value\"?",
                "query": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  < 'value'"
            }
        ],
        "final": {
            "query": "Question14:Find the model of the car whose weight is below the average weight.",
            "utterance": ""
        }
    },
    {
        "database_id": "car_1",
        "interaction": [
            {
                "utterance": "what is the minimum horsepower?",
                "query": "SELECT min(horsepower) from cars_data"
            },
            {
                "utterance": "what are the cars that do not have the minimum horsepower with less than 4 cylinders?",
                "query": "SELECT t1.id from cars_data as t1 where t1.horsepower  > 'value' and t1.cylinders < 4"
            },
            {
                "utterance": "what are the make ids and names of all those in tb2?",
                "query": "SELECT t1.makeid ,  t1.make from car_names as t1 join tb2 AS t2 on t1.makeid = t2.id"
            }
        ],
        "final": {
            "query": "SELECT t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (SELECT min(horsepower) from cars_data) and t1.cylinders < 4",
            "utterance": "Among the cars that do not have the minimum horsepower , what are the make ids and names of all those with less than 4 cylinders ?"
        }
    },
    {
        "database_id": "dog_kennels",
        "interaction": [
            {
                "utterance": "Which owner owns the most dogs?",
                "query": "SELECT owner_id FROM Dogs  GROUP BY owner_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "utterance": "List the owner id, first name and last name of the owner in tb1.",
                "query": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM tb1 AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id"
            }
        ],
        "final": {
            "query": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
            "utterance": "Which owner owns the most dogs? List the owner id, first name and last name."
        }
    },
    {
        "database_id": "flight_2",
        "interaction": [
            {
                "utterance": "Which airlines have departures from CVO airports?",
                "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport = 'CVO' "
            },
            {
                "utterance": "Which airlines have departures from APG airports?",
                "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport = 'APG'"
            },
            {
                "utterance": "Which airlines is in tb1 but not in tb2?",
                "query": "SELECT Airline FROM tb1 EXCEPT SELECT Airline FROM tb2"
            }
        ],
        "final": {
            "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport = 'CVO' EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport = 'APG'",
            "utterance": "Which airlines have departures from CVO but not from APG airports?"
        }
    },
    {
        "database_id": "flight_2",
        "interaction": [
            {
                "utterance": "Find all airlines that have flights from airport \"APG\".",
                "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport = 'APG'"
            },
            {
                "utterance": "Find all airlines that have flights from airport \"CVO\".",
                "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport = 'CVO'"
            },
            {
                "utterance": "Find all airlines that are in both tb1 and tb2.",
                "query": "SELECT Airline FROM tb1 INTERSECT SELECT Airline FROM tb2"
            }
        ],
        "final": {
            "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport = 'APG' INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport = 'CVO'",
            "utterance": "Find all airlines that have flights from both airports \"APG\" and \"CVO\"."
        }
    },
    {
        "database_id": "network_1",
        "interaction": [
            {
                "utterance": "what is the id of the high schooler who has the greatest number of likes?",
                "query": "SELECT student_id FROM Likes GROUP BY student_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "utterance": "what is the name of the high schooler with the id of \"value\"?",
                "query": "SELECT name FROM Highschooler WHERE id = 'value'"
            }
        ],
        "final": {
            "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
            "utterance": "What is the name of the high schooler who has the greatest number of likes?"
        }
    },
    {
        "database_id": "student_transcripts_tracking",
        "interaction": [
            {
                "utterance": "What is the id of the semester that had Masters students enrolled?",
                "query": "SELECT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name = 'Master' "
            },
            {
                "utterance": "What is the id of the semester that had Bachelors students enrolled?",
                "query": "SELECT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name = 'Bachelor'"
            },
            {
                "utterance": "what is the id the semester both in tb1 and tb2?",
                "query": "SELECT semester_id FROM tb1 INTERSECT SELECT semester_id FROM tb2"
            }
        ],
        "final": {
            "query": "SELECT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name = 'Master' INTERSECT SELECT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name = 'Bachelor'",
            "utterance": "What is the id of the semester that had both Masters and Bachelors students enrolled?"
        }
    },
    {
        "database_id": "museum_visit",
        "interaction": [
            {
                "utterance": "What are the id of the museum visited most times?",
                "query": "SELECT Museum_ID FROM visit GROUP BY Museum_ID ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "utterance": "what are the name and id of the museum with the id as \"value\"?",
                "query": "SELECT T1.name, T2.Museum_ID FROM museum AS T1 JOIN tb1 AS T2 ON T1.Museum_ID  =  T2.Museum_ID"
            }
        ],
        "final": {
            "query": "SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1",
            "utterance": "What are the id and name of the museum visited most times?"
        }
    },
    {
        "database_id": "notfound",
        "interaction": [
            {
                "utterance": "what are the students who own a cat as a pet?",
                "query": "SELECT T1.stuid FROM has_pet AS T1 JOIN pets AS T2 ON T1.petid  =  T2.petid WHERE T2.pettype = 'cat'"
            },
            {
                "utterance": "what major is every student who are not in tb1?",
                "query": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT stuid FROM tb1)"
            }
        ],
        "final": {
            "query": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype = 'cat')",
            "utterance": "what major is every student who does not own a cat as a pet, and also how old are they?"
        }
    },
    {
        "database_id": "flight_2",
        "interaction": [
            {
                "utterance": "how many flights each airline has? list the abbreviation and the country of the airilne.",
                "query": "SELECT T1.Abbreviation ,  T1.Country, count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline"
            },
            {
                "utterance": "Find the abbreviation and country of the airline that has fewest number of flights in tb1?",
                "query": "SELECT Abbreviation ,  Country FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",
            "utterance": "Find the abbreviation and country of the airline that has fewest number of flights?"
        }
    },
    {
        "database_id": "notfound",
        "interaction": [
            {
                "utterance": "What are the models created by either the car maker General Motors?",
                "query": "SELECT T1.Model FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id WHERE T2.FullName = 'General Motors'"
            },
            {
                "utterance": "What are the models created weighed more than 3500??",
                "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.weight > 3500"
            },
            {
                "utterance": "what are the models either in tb1 or tb2?",
                "query": "SELECT Model FROM tb1 UNION SELECT Model FROM tb2 "
            }
        ],
        "final": {
            "query": "SELECT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName = 'General Motors' OR T4.weight > 3500",
            "utterance": "What are the models created by either the car maker General Motors or weighed more than 3500?"
        }
    },
    {
        "database_id": "museum_visit",
        "interaction": [
            {
                "utterance": "Find the visitors who visited any museum opened after 2010.",
                "query": "SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year > 2010"
            },
            {
                "utterance": "Find the number of visitors who are not among them.",
                "query": "SELECT count(*) FROM visitor WHERE id NOT IN (SELECT visitor_id FROM tb1)"
            }
        ],
        "final": {
            "query": "SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year > 2010)",
            "utterance": "Find the number of visitors who did not visit any museum opened after 2010."
        }
    },
    {
        "database_id": "notfound",
        "interaction": [
            {
                "utterance": "SELECT count(*) FROM visitor WHERE id NOT IN (SELECT visitor_id FROM tb1) ",
                "query": ""
            },
            {
                "utterance": "Question4:How many battles did not lose any ship with tonnage \"225\"?",
                "query": "SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage = '225' )"
            }
        ],
        "final": {
            "query": "SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year > 2010",
            "utterance": "what are the visitors who visit any museum opened after 2010."
        }
    },
    {
        "database_id": "notfound",
        "interaction": [
            {
                "utterance": "SELECT count(*) FROM battle WHERE id NOT IN (SELECT lost_in_battle FROM tb1)",
                "query": ""
            },
            {
                "utterance": "Question5:What are the names of nations speak both English and French?",
                "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language = 'English' INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language = 'French'"
            }
        ],
        "final": {
            "query": "SELECT lost_in_battle FROM ship WHERE tonnage = '225' ",
            "utterance": "what are the battles lose any ship with tonnage \"225\"?"
        }
    },
    {
        "database_id": "notfound",
        "interaction": [
            {
                "utterance": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language = \"French\"",
                "query": "What are the names of nations both in tb1 and tb2?"
            },
            {
                "utterance": "SELECT name FROM tb1 INTERSECT SELECT name FROM tb2",
                "query": ""
            },
            {
                "utterance": "Question6:What are the first names of every student who has a cat or dog as a pet?",
                "query": "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype = 'cat' OR T3.pettype = 'dog'"
            }
        ],
        "final": {
            "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language = 'English' ",
            "utterance": "What are the names of nations speak English?"
        }
    },
    {
        "database_id": "notfound",
        "interaction": [
            {
                "utterance": "SELECT T1.Fname FROM student AS T1 JOIN tb1 AS T2 ON T1.stuid  =  T2.stuid",
                "query": ""
            }
        ],
        "final": {
            "query": "SELECT stuid FROM has_pet AS T1 JOIN pets AS T2 ON T1.petid  =  T2.petid WHERE T2.pettype = 'cat' OR T2.pettype = 'dog'",
            "utterance": "what are the id of every student who has a cat or dog as a pet?"
        }
    },
    {
        "database_id": "notfound",
        "interaction": [
            {
                "utterance": "what are the students id who have cats as pets?",
                "query": "SELECT stuid FROM has_pet AS T1 JOIN pets AS T2 ON T1.petid  =  T2.petid WHERE T2.pettype = 'cat' "
            },
            {
                "utterance": "What are the students first names who are in tb1?",
                "query": "SELECT T1.Fname FROM student AS T1 JOIN tb1 AS T2 ON T1.stuid  =  T2.stuid"
            },
            {
                "utterance": "what are the students id who have dogs as pets?",
                "query": "SELECT stuid FROM has_pet AS T1 JOIN pets AS T2 ON T1.petid  =  T2.petid WHERE T2.pettype = 'dog' "
            },
            {
                "utterance": "What are the students first names who are in tb3?",
                "query": "SELECT T1.Fname FROM student AS T1 JOIN tb3 AS T2 ON T1.stuid  =  T2.stuid"
            },
            {
                "utterance": "What are the students both in tb2 and tb4?",
                "query": "SELECT Fname FROM tb1 INTERSECT SELECT Fname FROM tb2"
            }
        ],
        "final": {
            "query": "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype = 'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype = 'dog'",
            "utterance": "What are the students first names who have both cats and dogs as pets?"
        }
    },
    {
        "database_id": "wta_1",
        "interaction": [
            {
                "utterance": "What are the country code and first name of the players who won in tourney WTA Championships?",
                "query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name = 'WTA Championships' "
            },
            {
                "utterance": "What are the country code and first name of the players who won in Australian Open?",
                "query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name = 'Australian Open'"
            },
            {
                "utterance": "What are the country code and first name of the players in both tb1 and tb2?",
                "query": "SELECT * FROM tb1 INTERSECT SELECT * FROM tb2"
            }
        ],
        "final": {
            "query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name = 'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name = 'Australian Open'",
            "utterance": "What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open?"
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "how much Spanish language is spoken in each country?",
                "query": "SELECT Percentage , CountryCode FROM countrylanguage WHERE LANGUAGE = 'Spanish'"
            },
            {
                "utterance": "Count the number of countries for which Spanish is the predominantly spoken language in tb1.",
                "query": "SELECT count(*), max(Percentage) FROM tb1 GROUP BY CountryCode"
            }
        ],
        "final": {
            "query": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE = 'Spanish' GROUP BY CountryCode",
            "utterance": "Count the number of countries for which Spanish is the predominantly spoken language."
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "What are the names of nations where  English is official language?",
                "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language = 'English' AND T2.IsOfficial = 'T'"
            },
            {
                "utterance": "What are the names of nations where  French is official language?",
                "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language = 'French' AND T2.IsOfficial = 'T'"
            },
            {
                "utterance": "What are the names of nations both in tb1 and tb2?",
                "query": "SELECT Name FROM tb1 INTERSECT SELECT Name FROM tb2 "
            }
        ],
        "final": {
            "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language = 'English' AND T2.IsOfficial = 'T' INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language = 'French' AND T2.IsOfficial = 'T'",
            "utterance": "What are the names of nations where both English and French are official languages?"
        }
    },
    {
        "database_id": "dog_kennels",
        "interaction": [
            {
                "utterance": "what is the number of dog per breed?",
                "query": "SELECT breed_code, count(*) FROM Dogs GROUP BY breed_code"
            },
            {
                "utterance": "what is the rarest breed of the dogs in tb1?",
                "query": "SELECT breed_code FROM tb1 ORDER BY counter ASC LIMIT 1 "
            },
            {
                "utterance": "List the names of the dogs of with id as \"value\" and the treatment dates of them.",
                "query": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  = 'value'"
            }
        ],
        "final": {
            "query": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
            "utterance": "List the names of the dogs of the rarest breed and the treatment dates of them."
        }
    },
    {
        "database_id": "car_1",
        "interaction": [
            {
                "utterance": "what are the number of models each maker produce? List their id, maker nad number of models.",
                "query": "SELECT T1.Id ,  T1.Maker, count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id "
            },
            {
                "utterance": "What are the ids and makers of all car makers that produce at least 2 models in tb1?",
                "query": "SELECT T1.Id ,  T1.Maker FROM tb1 WHERE counter > 2"
            },
            {
                "utterance": "What are the ids and makers of all car makers that produce cars?",
                "query": "SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model "
            },
            {
                "utterance": "What are the ids and makers of all car makers that produce more than 3 cars in tb3?",
                "query": "SELECT T1.Id ,  T1.Maker FROM tb3 GROUP BY Id HAVING count(*) > 3"
            },
            {
                "utterance": "What are the ids and makers of all car makers in tb2 and tb4?",
                "query": "SELECT Id ,  Maker FROM tb2 INTERSECT SELECT Id ,  Maker FROM tb4"
            }
        ],
        "final": {
            "query": "SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*) >= 2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*) > 3",
            "utterance": "What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars?"
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "Give the names of countries with English official language.",
                "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language = 'English' AND T2.IsOfficial = 'T'"
            },
            {
                "utterance": "Give the names of countries with French official language.",
                "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language = 'French' AND T2.IsOfficial = 'T'"
            },
            {
                "utterance": "Give the names of countries both in tb1 and tb2?",
                "query": "SELECT Name FROM tb1 INTERSECT SELECT Name FROM tb2 "
            }
        ],
        "final": {
            "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language = 'English' AND T2.IsOfficial = 'T' INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language = 'French' AND T2.IsOfficial = 'T'",
            "utterance": "Give the names of countries with English and French as official languages."
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "what are the in the Asian continent?",
                "query": "SELECT Code FROM country WHERE Continent = 'Asia'"
            },
            {
                "utterance": "how much each language is used in tb1?",
                "query": "SELECT T1.Language, count(*) FROM countrylanguage AS T1 JOIN tb1 AS T2 ON T1.CountryCode = T2.Code GROUP BY T1.Language"
            },
            {
                "utterance": "Which language is the most popular in tb2?",
                "query": "SELECT Language FROM tb2 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent = 'Asia' GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",
            "utterance": "Which language is the most popular on the Asian continent?"
        }
    },
    {
        "database_id": "battle_death",
        "interaction": [
            {
                "utterance": "List the name and date the battle that has lost the ship named \"Lettice\".",
                "query": "ELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name = 'Lettice'"
            },
            {
                "utterance": "List the name and date the battle that has lost the ship named \"HMS Atalanta\".",
                "query": "SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name = 'HMS Atalanta'"
            },
            {
                "utterance": "List the name and date the battle both in tb1 and tb2?",
                "query": "SELECT * FROM tb1 INTERSECT SELECT * FROM tb2"
            }
        ],
        "final": {
            "query": "SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name = 'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name = 'HMS Atalanta'",
            "utterance": "List the name and date the battle that has lost the ship named \"Lettice\" and the ship named \"HMS Atalanta\"."
        }
    },
    {
        "database_id": "student_transcripts_tracking",
        "interaction": [
            {
                "utterance": "how many students are enrolled in each program?",
                "query": "SELECT T1.degree_summary_name, count(*) FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name"
            },
            {
                "utterance": "What is the degree summary name that has the most number of students enrolled in tb1?",
                "query": "SELECT degree_summary_name FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1",
            "utterance": "What is the degree summary name that has the most number of students enrolled?"
        }
    },
    {
        "database_id": "car_1",
        "interaction": [
            {
                "utterance": "Which of the countries has the most car makers? List the country.",
                "query": "SELECT Country FROM CAR_MAKERS GROUP BY Country ORDER BY Count(*) DESC LIMIT 1"
            },
            {
                "utterance": "Which of the countries in tb1? List the country name.",
                "query": "SELECT T1.CountryName FROM CAR_MAKERS AS T1 JOIN tb1 AS T2 ON  T1.CountryId = T2.Country "
            }
        ],
        "final": {
            "query": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1",
            "utterance": "Which of the countries has the most car makers? List the country name."
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "What is the country code of Aruba?",
                "query": "SELECT Code FROM country WHERE Name = 'Aruba'"
            },
            {
                "utterance": "how much each language is spoken in the country with code as \"value\"?",
                "query": "SELECT Language, Percentage FROM ountrylanguage  WHERE CountryCode = 'value' "
            },
            {
                "utterance": "What language is predominantly spoken in tb2?",
                "query": "SELECT Language FROM tb2 ORDER BY Percentage DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name = 'Aruba' ORDER BY Percentage DESC LIMIT 1",
            "utterance": "What language is predominantly spoken in Aruba?"
        }
    },
    {
        "database_id": "dog_kennels",
        "interaction": [
            {
                "utterance": "what is the average cost of treatment?",
                "query": "SELECT avg(cost_of_treatment) FROM Treatments"
            },
            {
                "utterance": "What are the first name and last name of the professionals who have done treatment with cost below \"value\"",
                "query": "SELECT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment < 'value'"
            }
        ],
        "final": {
            "query": "SELECT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",
            "utterance": "What are the first name and last name of the professionals who have done treatment with cost below average?"
        }
    },
    {
        "database_id": "student_transcripts_tracking",
        "interaction": [
            {
                "utterance": "how many times each student has enrolled in any program?",
                "query": "SELECT T1.student_id, count(*) FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id"
            },
            {
                "utterance": "Which student has enrolled for the most times in tb1?",
                "query": "SELECT T1.student_id, counter FROM tb1 ORDER BY counter DESC LIMIT 1"
            },
            {
                "utterance": "List the id, first name, middle name, last name, the number of enrollments and student id of student with id of \"value\".",
                "query": "SELECT student_id ,  first_name ,  middle_name ,  last_name ,  count(*) FROM Students WHERE student_id = 'value' GROUP BY student_id"
            }
        ],
        "final": {
            "query": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
            "utterance": "Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id."
        }
    },
    {
        "database_id": "student_transcripts_tracking",
        "interaction": [
            {
                "utterance": "how many students each address holds currently?",
                "query": "SELECT T1.address_id, count(*) FROM addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id  GROUP BY T1.address_id"
            },
            {
                "utterance": "Which address holds the most number of students in tb1?",
                "query": "SELECT address_id FROM tb1 ORDER BY counter DESC LIMIT 1."
            },
            {
                "utterance": "List the address id and all lines of the address with id of \"value\"",
                "query": "SELECT address_id ,  line_1 ,  ine_2 FROM Addresses WHERE address_id = 'value'"
            }
        ],
        "final": {
            "query": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",
            "utterance": "Which address holds the most number of students currently? List the address id and all lines."
        }
    },
    {
        "database_id": "dog_kennels",
        "interaction": [
            {
                "utterance": "what is the average cost of treatment?",
                "query": "SELECT avg(cost_of_treatment) FROM Treatments"
            },
            {
                "utterance": "Which professionals have operated a treatment that costs less than the \"value\"? Give me theor first names and last names",
                "query": "SELECT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment < 'value'"
            }
        ],
        "final": {
            "query": "SELECT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",
            "utterance": "Which professionals have operated a treatment that costs less than the average? Give me theor first names and last names."
        }
    },
    {
        "database_id": "employee_hire_evaluation",
        "interaction": [
            {
                "utterance": "how many employees each shop has? give me the shop name.",
                "query": "SELECT t2.name, count(*) FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id"
            },
            {
                "utterance": "What is the name of the shop that is hiring the largest number of employees in tb1.",
                "query": "SELECT name FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1",
            "utterance": "What is the name of the shop that is hiring the largest number of employees?"
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "what cities use English?",
                "query": "SELECT CountryCode FROM countrylanguage WHERE Language = 'English'"
            },
            {
                "utterance": "Order the city with the based on their population in tb1.",
                "query": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN tb1 AS T2 ON T1.CountryCode  =  T2.CountryCode ORDER BY Population DESC"
            },
            {
                "utterance": "What is the most populace city in tb2.",
                "query": "SELECT T1.Name ,  T1.Population FROM tb2 LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language = 'English' ORDER BY T1.Population DESC LIMIT 1",
            "utterance": "What is the most populace city that speaks English?"
        }
    },
    {
        "database_id": "wta_1",
        "interaction": [
            {
                "utterance": "What are the first names and country codes for players who won in tourney WTA Championships?",
                "query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name = 'WTA Championships' "
            },
            {
                "utterance": "What are the first names and country codes for players who wonin Australian Open?",
                "query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name = 'Australian Open'"
            },
            {
                "utterance": "What are the first names and country codes for players in both tb1 and tb2?",
                "query": "SELECT * FROM tb1 INTERSECT SELECT * FROM tb2"
            }
        ],
        "final": {
            "query": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name = 'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name = 'Australian Open'",
            "utterance": "What are the first names and country codes for players who won both the WTA Championships and the Australian Open?"
        }
    },
    {
        "database_id": "dog_kennels",
        "interaction": [
            {
                "utterance": "Give me the id, role and email of the professionals who performed any treatment on dogs.",
                "query": "SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id"
            },
            {
                "utterance": "Give me the id, role and email of the professionals who are not in tb1.",
                "query": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM tb1"
            }
        ],
        "final": {
            "query": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id",
            "utterance": "Give me the id, role and email of the professionals who did not perform any treatment on dogs."
        }
    },
    {
        "database_id": "student_transcripts_tracking",
        "interaction": [
            {
                "utterance": "how many results each transcript has? Show the date, number of results, also list the id.",
                "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM , count(*) Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id"
            },
            {
                "utterance": "Show the date of the transcript which shows the least number of results in tb1, also list the id.",
                "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM tb1 ORDER BY counter ASC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",
            "utterance": "Show the date of the transcript which shows the least number of results, also list the id."
        }
    },
    {
        "database_id": "flight_2",
        "interaction": [
            {
                "utterance": "what is the number of flights per airline?",
                "query": "SELECT T1.Airline, count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline"
            },
            {
                "utterance": "What airline serves the most flights in tb1?",
                "query": "SELECT Airline FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1",
            "utterance": "What airline serves the most flights?"
        }
    },
    {
        "database_id": "flight_2",
        "interaction": [
            {
                "utterance": "what is the number of source airport per city?",
                "query": "SELECT T1.City, count(*) FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City"
            },
            {
                "utterance": "Which city is the most frequent source airport in tb1?",
                "query": "SELECT City FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
            "utterance": "Which city is the most frequent source airport?"
        }
    },
    {
        "database_id": "voter_1",
        "interaction": [
            {
                "utterance": "what is the number of voters per area code?",
                "query": "SELECT T1.area_code, count(*) FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code"
            },
            {
                "utterance": "What is the area code in which the most voters voted in tb1?",
                "query": "SELECT area_code FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1",
            "utterance": "What is the area code in which the most voters voted?"
        }
    },
    {
        "database_id": "dog_kennels",
        "interaction": [
            {
                "utterance": "what is the amount of money in total for treatment for each dog?",
                "query": "SELECT dog_id, sum(cost_of_treatment) FROM Treatments "
            },
            {
                "utterance": "how much is each owner has paid for their dogs in tb1? ",
                "query": "SELECT T1.owner_id, T2.summation FROM Dogs AS T1 JOIN tb1 AS T2 ON T1.dog_id  =  T2.dog_id"
            },
            {
                "utterance": "Show the owner id and zip code and cost for the owners in tb2.",
                "query": "SELECT T1.owner_id, T1.zip_code, T2.summation FROM Owners AS T1 JOIN tb2 AS T2 ON T1.owner_id  =  T2.owner_id"
            },
            {
                "utterance": "Which owner has paid the largest for their dogs in tb3?",
                "query": "SELECT owner_id, zip_code FROM tb3 ORDER BY summation DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
            "utterance": "Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code."
        }
    },
    {
        "database_id": "voter_1",
        "interaction": [
            {
                "utterance": "how much each continent got votes?",
                "query": "SELECT T1.contestant_number , T1.contestant_name, count(*) FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number"
            },
            {
                "utterance": "Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes in tb1?",
                "query": "SELECT contestant_number , contestant_name FROM tb1 ORDER BY counter ASC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1",
            "utterance": "Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?"
        }
    },
    {
        "database_id": "flight_2",
        "interaction": [
            {
                "utterance": "what are the airports have departing or arriving flights?",
                "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport"
            },
            {
                "utterance": "how many flights each airport has in tb1?",
                "query": "SELECT AirportCode, count(*) FROM tb1 GROUP By AirportCode"
            },
            {
                "utterance": "What is the code of airport that has fewest number of flights in tb2.",
                "query": "SELECT AirportCode FROM tb2 ORDER counter ASC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1",
            "utterance": "What is the code of airport that has fewest number of flights?"
        }
    },
    {
        "database_id": "voter_1",
        "interaction": [
            {
                "utterance": "What is the contestant number of \"Tabatha Gehling\"?",
                "query": "SELECT contestant_number FROM contestants WHERE contestant_name = 'Tabatha Gehling'"
            },
            {
                "utterance": "what is the area codes in which voters voted both for the contestant with id \"value1\"?",
                "query": "SELECT T2.area_code FROM votes AS T1 JOIN area_code_state AS T2 ON T1.state  =  T2.state WHERE T1.contestant_number = 'value1'"
            },
            {
                "utterance": "What is the contestant number of \"Kelly Clauss\"?",
                "query": "SELECT contestant_number FROM contestants WHERE contestant_name = 'Kelly Clauss'"
            },
            {
                "utterance": "what is the area codes in which voters voted both for the contestant with id \"value2\"?",
                "query": "SELECT T2.area_code FROM votes AS T1 JOIN area_code_state AS T2 ON T1.state  =  T2.state WHERE T1.contestant_number = 'value2'"
            },
            {
                "utterance": "what is the area_code both in tb2 and tb4?",
                "query": "SELECT area_code FROM tb2 INTERSECT SELECT area_code FROM tb4 "
            }
        ],
        "final": {
            "query": "SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name = 'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name = 'Kelly Clauss'",
            "utterance": "List the area codes in which voters voted both for the contestant \"Tabatha Gehling\" and the contestant \"Kelly Clauss\"."
        }
    },
    {
        "database_id": "dog_kennels",
        "interaction": [
            {
                "utterance": "what is the age of youngest dog.",
                "query": "SELECT max(age) FROM Dogs"
            },
            {
                "utterance": "List the last name of the owner owning the dog with age \"value\"",
                "query": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  = 'value'"
            }
        ],
        "final": {
            "query": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )",
            "utterance": "List the last name of the owner owning the youngest dog."
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "what countries speak English?",
                "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language = 'English'"
            },
            {
                "utterance": "How many people live in countries not in tb1?",
                "query": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT Name FROM tb1)"
            }
        ],
        "final": {
            "query": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language = 'English')",
            "utterance": "How many people live in countries that do not speak English?"
        }
    },
    {
        "database_id": "voter_1",
        "interaction": [
            {
                "utterance": "Which contestants get voted?",
                "query": "SELECT contestant_number FROM votes"
            },
            {
                "utterance": "Which contestants did not get voted in tb1?",
                "query": "SELECT contestant_number FROM contestants NOT IN ( SELECT contestant_number FROM tb1 )"
            },
            {
                "utterance": "how many contestants are there in tb2?",
                "query": "SELECT count(*) FROM tb2"
            }
        ],
        "final": {
            "query": "SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )",
            "utterance": "How many contestants did not get voted?"
        }
    },
    {
        "database_id": "cre_Doc_Template_Mgt",
        "interaction": [
            {
                "utterance": "how many templates used for each document? Return the number, id ,and type code of the template.",
                "query": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id"
            },
            {
                "utterance": "Return the id and type code of the template that is used for the greatest number of documents in tb1.",
                "query": "SELECT template_id FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",
            "utterance": "Return the id and type code of the template that is used for the greatest number of documents."
        }
    },
    {
        "database_id": "car_1",
        "interaction": [
            {
                "utterance": "Which ids are not built by the \"Ford Motor Company\"?",
                "query": "SELECT Id FROM CAR_MAKERS WHERE FullName != 'Ford Motor Company'"
            },
            {
                "utterance": "what is the model of cars with ids in tb1?",
                "query": "SELECT T1.model FROM MODEL_LIST AS T1 JOIN tb1 AS T2 ON T1.Maker = T2.Id "
            },
            {
                "utterance": "Which ids are lighter than 3500?",
                "query": "SELECT Id FROM CARS_DATA WHERE weight < 3500"
            },
            {
                "utterance": "what is the model of cars with ids in tb3? ",
                "query": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN tb3 AS T2 ON T1.MakeId = T2.Id "
            },
            {
                "utterance": "what are the models both in tb2 and tb4.",
                "query": "SELECT model FROM tb2 INTERSECT SELECT model FROM tb4"
            }
        ],
        "final": {
            "query": "SELECT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight < 3500 AND T4.FullName != 'Ford Motor Company'",
            "utterance": "Which models are lighter than 3500 but not built by the \"Ford Motor Company\"?"
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "what cities use English?",
                "query": "SELECT CountryCode FROM countrylanguage WHERE Language = 'English'"
            },
            {
                "utterance": "Order the city with the based on their population in tb1.",
                "query": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN tb1 AS T2 ON T1.CountryCode  =  T2.CountryCode ORDER BY Population DESC"
            },
            {
                "utterance": "Find the city with the largest population in tb2.",
                "query": "SELECT T1.Name ,  T1.Population FROM tb2 LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language = 'English' ORDER BY T1.Population DESC LIMIT 1",
            "utterance": "Find the city with the largest population that uses English."
        }
    },
    {
        "database_id": "dog_kennels",
        "interaction": [
            {
                "utterance": "how many treatments each dogs of owners have?",
                "query": "SELECT T1.owner_id, count(*) FROM Dogs AS T1 JOIN Treatments AS T2 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id"
            },
            {
                "utterance": "Tell me the owner id who spent the most on treatments of his or her dogs in tb1.",
                "query": "SELECT owner_id FROM tb1 ORDER BY T1.owner_id DESC LIMIT 1"
            },
            {
                "utterance": "what is the owner_id and last name of the owner with id \"value\".",
                "query": "SELECT owner_id ,  last_name FROM Owners WHERE owner_id = 'value'"
            }
        ],
        "final": {
            "query": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
            "utterance": "Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs."
        }
    },
    {
        "database_id": "car_1",
        "interaction": [
            {
                "utterance": "what are the number of models each maker produce? List their id, maker and number of models.",
                "query": "SELECT T1.Id ,  T1.Maker, count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id "
            },
            {
                "utterance": "Which are the car makers which produce at least 2 models in tb1?",
                "query": "SELECT T1.Id ,  T1.Maker FROM tb1 WHERE counter > 2"
            },
            {
                "utterance": "Which are the car makers which produce cars?",
                "query": "SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model "
            },
            {
                "utterance": "Which are the car makers which produce more than 3 cars in tb3?",
                "query": "SELECT T1.Id ,  T1.Maker FROM tb3 GROUP BY Id HAVING count(*) > 3"
            },
            {
                "utterance": "Which are the car makers in tb2 and tb4?",
                "query": "SELECT Id ,  Maker FROM tb2 INTERSECT SELECT Id ,  Maker FROM tb4"
            }
        ],
        "final": {
            "query": "SELECT t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*) >= 2 intersect SELECT t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*) > 3",
            "utterance": "Which are the car makers which produce at least 2 models and more than 3 car makers ? List the id and the maker ."
        }
    },
    {
        "database_id": "student_transcripts_tracking",
        "interaction": [
            {
                "utterance": "what is the number of degrees per department? list the number, name and id of department.",
                "query": "SELECT t2.department_name ,  t1.department_id, count(*) from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id"
            },
            {
                "utterance": "What is the name and id of the department with the most number of degrees in tb1?",
                "query": "SELECT department_name ,  department_id FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1",
            "utterance": "What is the name and id of the department with the most number of degrees ?"
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "Which continent in which English is the official language.",
                "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language = 'English' AND T2.IsOfficial = 'T'"
            },
            {
                "utterance": "Give the mean life expectancy of countries not in tb1.",
                "query": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT Name FROM tb1)"
            }
        ],
        "final": {
            "query": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language = 'English' AND T2.IsOfficial = 'T')",
            "utterance": "Give the mean life expectancy of countries in which English is not the official language."
        }
    },
    {
        "database_id": "dog_kennels",
        "interaction": [
            {
                "utterance": "Which owner owns the most dogs?",
                "query": "SELECT owner_id FROM Dogs  GROUP BY owner_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "utterance": "Return the owner id, first name and last name of the owner in tb1.",
                "query": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM tb1 AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id"
            }
        ],
        "final": {
            "query": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
            "utterance": "Return the owner id, first name and last name of the owner who has the most dogs."
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "what is the number of languages per continent?",
                "query": "SELECT T1.Continent, count(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent"
            },
            {
                "utterance": "Which continent has the most diverse languages in tb1?",
                "query": "SELECT Continent FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1",
            "utterance": "Which continent has the most diverse languages?"
        }
    },
    {
        "database_id": "car_1",
        "interaction": [
            {
                "utterance": "what is the amount of horsepower for the models with 3 cylinders and what make is it?",
                "query": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders = 3"
            },
            {
                "utterance": "What is the largest amount of horsepower for the models in tb1 and what make is it.",
                "query": "SELECT horsepower ,  Make FROM tb1 ORDER BY horsepower DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders = 3 ORDER BY T2.horsepower DESC LIMIT 1",
            "utterance": "What is the largest amount of horsepower for the models with 3 cylinders and what make is it?"
        }
    },
    {
        "database_id": "student_transcripts_tracking",
        "interaction": [
            {
                "utterance": "What are the last name of the students who registered in any degree programs?",
                "query": "SELECT T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id"
            },
            {
                "utterance": "What are the last name of the students who live in North Carolina?",
                "query": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county = 'NorthCarolina'"
            },
            {
                "utterance": "what are the last name of students in tb2 but not in tb1?",
                "query": "SELECT last_name FROM tb2 EXCEPT SELECT last_name FROM tb1"
            }
        ],
        "final": {
            "query": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county = 'NorthCarolina' EXCEPT SELECT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id",
            "utterance": "What are the last name of the students who live in North Carolina but have not registered in any degree programs?"
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "What are the names of cities in Europe?",
                "query": "SELECT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent = 'Europe'"
            },
            {
                "utterance": "what are the names of cities which English is the official language?",
                "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.IsOfficial = 'T' AND T2.Language = 'English'"
            },
            {
                "utterance": "What are the names of cities in tb1 but not in tb2?",
                "query": "SELECT name FROM tb1 NOT IN (SELECT Name FROM tb2)"
            }
        ],
        "final": {
            "query": "SELECT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent = 'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial = 'T' AND T4.Language = 'English')",
            "utterance": "What are the names of cities in Europe for which English is not the official language?"
        }
    },
    {
        "database_id": "student_transcripts_tracking",
        "interaction": [
            {
                "utterance": "what is the number of students enrolled in each course? list the number and name of the course.",
                "query": "SELECT  T1.course_name, count(*) FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name"
            },
            {
                "utterance": "What is the name of the course with the most students enrolled in tb1?",
                "query": "SELECT course_name FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1",
            "utterance": "What is the name of the course with the most students enrolled?"
        }
    },
    {
        "database_id": "pets_1",
        "interaction": [
            {
                "utterance": "Find the id of students who have a cat or dog pet?",
                "query": "SELECT stuid FROM has_pet AS T1 JOIN pets AS T2 ON T1.petid  =  T2.petid WHERE T2.pettype = 'cat' OR T2.pettype = 'dog'"
            },
            {
                "utterance": "Find the first name of students who are in tb1?",
                "query": "SELECT T1.Fname FROM student AS T1 JOIN tb1 AS T2 ON T1.stuid  =  T2.stuid"
            }
        ],
        "final": {
            "query": "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype = 'cat' OR T3.pettype = 'dog'",
            "utterance": "Find the first name of students who have cat or dog pet."
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "which nations use English?",
                "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language = 'English'"
            },
            {
                "utterance": "What is the total number of people living not in tb1?",
                "query": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT Name FROM tb1)"
            }
        ],
        "final": {
            "query": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language = 'English')",
            "utterance": "What is the total number of people living in the nations that do not use English?"
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "what are the in the Asian nations?",
                "query": "SELECT Code FROM country WHERE Continent = 'Asia'"
            },
            {
                "utterance": "how much each language is used by tb1?",
                "query": "SELECT T1.Language, count(*) FROM countrylanguage AS T1 JOIN tb1 AS T2 ON T1.CountryCode = T2.Code GROUP BY T1.Language"
            },
            {
                "utterance": "What is the language that is used by the largest number in tb2?",
                "query": "SELECT Language FROM tb2 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent = 'Asia' GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",
            "utterance": "What is the language that is used by the largest number of Asian nations?"
        }
    },
    {
        "database_id": "car_1",
        "interaction": [
            {
                "utterance": "how many car makers each country has? list the number, id and name of the country.",
                "query": "SELECT T1.countryId ,  T1.CountryName, count(*) FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId"
            },
            {
                "utterance": "What are the id and names of the countries which have more than 3 car makers in tb1?",
                "query": "SELECT countryId ,  CountryName FROM tb1 WHERE counter > 3"
            },
            {
                "utterance": "what are models for each country? list the model, id and name of the country.",
                "query": "SELECT T1.countryId ,  T1.CountryName, T3.Model FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker"
            },
            {
                "utterance": "What are the id and names of the countries which produce the \"fiat\" model in tb3?",
                "query": "SELECT countryId ,  CountryName FROM tb3 WHERE Model = 'fiat'"
            },
            {
                "utterance": "What are the id and names of the countries in tb2 or tb4?",
                "query": "SELECT countryId ,  CountryName FROM tb2 UNION SELECT countryId ,  CountryName  FROM tb4"
            }
        ],
        "final": {
            "query": "SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*) > 3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model = 'fiat'",
            "utterance": "What are the id and names of the countries which have more than 3 car makers or produce the \"fiat\" model?"
        }
    },
    {
        "database_id": "student_transcripts_tracking",
        "interaction": [
            {
                "utterance": "how many students each address has? list the id, line 1, and line 2.",
                "query": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2, count(*) FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id"
            },
            {
                "utterance": "What is the id, line 1, and line 2 of the address with the most student in tb1?",
                "query": "SELECT address_id ,  line_1 ,  line_2 FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",
            "utterance": "What is the id, line 1, and line 2 of the address with the most students?"
        }
    },
    {
        "database_id": "cre_Doc_Template_Mgt",
        "interaction": [
            {
                "utterance": "how many templates used for each document? Return the number, id ,and type code of the template.",
                "query": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id"
            },
            {
                "utterance": "hat is the id and type code for the template used by the most documents in tb1?",
                "query": "SELECT template_id FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",
            "utterance": "What is the id and type code for the template used by the most documents?"
        }
    },
    {
        "database_id": "flight_2",
        "interaction": [
            {
                "utterance": "how many flights each airline has? list the abbreviation of the airilne and what country is it in.",
                "query": "SELECT T1.Abbreviation ,  T1.Country, count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline"
            },
            {
                "utterance": "What is the abbreviation of the airilne has the fewest flights and what country is it in tb1?",
                "query": "SELECT Abbreviation ,  Country FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",
            "utterance": "What is the abbreviation of the airilne has the fewest flights and what country is it in?"
        }
    },
    {
        "database_id": "flight_2",
        "interaction": [
            {
                "utterance": "what are the code of airports that has departing and arriving flights?",
                "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport"
            },
            {
                "utterance": "What is the code of airport that has the highest number of flights in tb1?",
                "query": "SELECT AirportCode FROM tb1 GROUP BY AirportCode ORDER BY count(*) DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1",
            "utterance": "What is the code of airport that has the highest number of flights?"
        }
    },
    {
        "database_id": "car_1",
        "interaction": [
            {
                "utterance": "Which ids were not built by the Ford Motor Company?",
                "query": "SELECT Id FROM CAR_MAKERS WHERE FullName != 'Ford Motor Company'"
            },
            {
                "utterance": "what is the model of cars with ids in tb1?",
                "query": "SELECT T1.model FROM MODEL_LIST AS T1 JOIN tb1 AS T2 ON T1.Maker = T2.Id "
            },
            {
                "utterance": "Which ids are lighter than 3500?",
                "query": "SELECT Id FROM CARS_DATA WHERE weight < 3500"
            },
            {
                "utterance": "what is the model of cars with ids in tb3? ",
                "query": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN tb3 AS T2 ON T1.MakeId = T2.Id "
            },
            {
                "utterance": "what are the models both in tb2 and tb4.",
                "query": "SELECT model FROM tb2 INTERSECT SELECT model FROM tb4"
            }
        ],
        "final": {
            "query": "SELECT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight < 3500 AND T4.FullName != 'Ford Motor Company'",
            "utterance": "What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?"
        }
    },
    {
        "database_id": "flight_2",
        "interaction": [
            {
                "utterance": "what are the airport codes that has departing and arriving flights?",
                "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport"
            },
            {
                "utterance": "What is the airport code of the airport with the most flights in tb1?",
                "query": "SELECT AirportCode FROM tb1 GROUP BY AirportCode ORDER BY count(*) DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1",
            "utterance": "What is the airport code of the airport with the most flights?"
        }
    },
    {
        "database_id": "concert_singer",
        "interaction": [
            {
                "utterance": "Find the name and location of the stadiums which some concerts happened in the years of 2014.",
                "query": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year = 2014"
            },
            {
                "utterance": "Find the name and location of the stadiums which some concerts happened in the years of 2015.",
                "query": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year = 2015"
            },
            {
                "utterance": "Find the name and location of the stadiums in both tb1 and tb2.",
                "query": "SELECT name ,  location FROM tb1 INTERSECT SELECT name ,  location FROM tb2"
            }
        ],
        "final": {
            "query": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year = 2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year = 2015",
            "utterance": "Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015."
        }
    },
    {
        "database_id": "car_1",
        "interaction": [
            {
                "utterance": "what is the lowest horsepower?",
                "query": "SELECT min(Horsepower) FROM CARS_DATA"
            },
            {
                "utterance": "Among the cars with more \"value\" as the horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name.",
                "query": "SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  'value' AND T1.Cylinders <= 3"
            }
        ],
        "final": {
            "query": "SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders <= 3",
            "utterance": "Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name."
        }
    },
    {
        "database_id": "employee_hire_evaluation",
        "interaction": [
            {
                "utterance": "how many times each employee was awarded in the evaluation?",
                "query": "SELECT t1.name, count(*) FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID"
            },
            {
                "utterance": "find the name of employee who was awarded the most times in tb1.",
                "query": "SELECT name FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1",
            "utterance": "find the name of employee who was awarded the most times in the evaluation."
        }
    },
    {
        "database_id": "dog_kennels",
        "interaction": [
            {
                "utterance": "what is the age of youngest dog.",
                "query": "SELECT max(age) FROM Dogs"
            },
            {
                "utterance": "Who owns the dog with age \"value\"? Give me his or her last name.",
                "query": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  = 'value'"
            }
        ],
        "final": {
            "query": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )",
            "utterance": "Who owns the youngest dog? Give me his or her last name."
        }
    },
    {
        "database_id": "flight_2",
        "interaction": [
            {
                "utterance": "Find all airlines that have flights from airport \"CVO\"",
                "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport = 'CVO' "
            },
            {
                "utterance": "Find all airlines that have flights from airport \"APG\"",
                "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport = 'APG'"
            },
            {
                "utterance": "Which airlines is in tb1 but not in tb2?",
                "query": "SELECT Airline FROM tb1 EXCEPT SELECT Airline FROM tb2"
            }
        ],
        "final": {
            "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport = 'CVO' EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport = 'APG'",
            "utterance": "Find all airlines that have flights from airport \"CVO\" but not from \"APG\"."
        }
    },
    {
        "database_id": "car_1",
        "interaction": [
            {
                "utterance": "Which models are produced by maker with the full name General Motors?",
                "query": "SELECT T1.Model FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id WHERE T2.FullName = 'General Motors'"
            },
            {
                "utterance": "Which models are weighing more than 3500?",
                "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.weight > 3500"
            },
            {
                "utterance": "Which models are in tb1 or tb2?",
                "query": "SELECT Model FROM tb1 UNION SELECT Model FROM tb2 "
            }
        ],
        "final": {
            "query": "SELECT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName = 'General Motors' OR T4.weight > 3500",
            "utterance": "Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?"
        }
    },
    {
        "database_id": "museum_visit",
        "interaction": [
            {
                "utterance": "how much money in total each visitor have spent in all museum tickets? return the id, name and membership level of visitors.",
                "query": "SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership,sum(t2.Total_spent)  FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id "
            },
            {
                "utterance": "What are the id, name and membership level of visitors who have spent the most in tb1?",
                "query": "SELECT visitor_id ,  name ,  Level_of_membership FROM tb1 ORDER BY summation DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1",
            "utterance": "What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?"
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "what is the minimum population in any country in Africa?",
                "query": "SELECT min(population) FROM country WHERE Continent = 'Africa'"
            },
            {
                "utterance": "What are the Asian countries which have a population larger than \"value\".",
                "query": "SELECT Name FROM country WHERE Continent = 'Asia'  AND population  > 'value'"
            }
        ],
        "final": {
            "query": "SELECT Name FROM country WHERE Continent = 'Asia'  AND population  >  (SELECT min(population) FROM country WHERE Continent = 'Africa')",
            "utterance": "What are the Asian countries which have a population larger than that of any country in Africa?"
        }
    },
    {
        "database_id": "dog_kennels",
        "interaction": [
            {
                "utterance": "how many dogs have each breed name.",
                "query": "SELECT T1.breed_name, count(*) FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name"
            },
            {
                "utterance": "Which breed do the most dogs have in tb1?",
                "query": "SELECT breed_name FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1",
            "utterance": "Which breed do the most dogs have? Give me the breed name."
        }
    },
    {
        "database_id": "tvshow",
        "interaction": [
            {
                "utterance": "What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones?",
                "query": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by = 'Michael Chang'"
            },
            {
                "utterance": "What is the series name and country of all TV channels that are playing cartoons directed by  Michael Chang?",
                "query": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by = 'Ben Jones'"
            },
            {
                "utterance": "what is the series name and country of all TV channels that are both in tb1 and tb2?",
                "query": "SELECT * FROM tb1 INTERSECT SELECT * FROM tb2"
            }
        ],
        "final": {
            "query": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by = 'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by = 'Ben Jones'",
            "utterance": "What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?"
        }
    },
    {
        "database_id": "student_transcripts_tracking",
        "interaction": [
            {
                "utterance": "For each semester, how many students registered? return the name and id.",
                "query": "SELECT T1.semester_name ,  T1.semester_id, count(*) FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id"
            },
            {
                "utterance": "what is the name and id of the one with the most students registered in tb1?",
                "query": "SELECT semester_name ,  semester_id FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",
            "utterance": "For each semester, what is the name and id of the one with the most students registered?"
        }
    },
    {
        "database_id": "battle_death",
        "interaction": [
            {
                "utterance": "how many times each ship caused total injuries? return the ship id and name.",
                "query": "SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id "
            },
            {
                "utterance": "What is the ship id and name that caused most total injuries in tb1?",
                "query": "SELECT id, name FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",
            "utterance": "What is the ship id and name that caused most total injuries?"
        }
    },
    {
        "database_id": "flight_2",
        "interaction": [
            {
                "utterance": "how many arriving flights each city has?",
                "query": "SELECT T1.City, count(*) FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City"
            },
            {
                "utterance": "Which city has most number of arriving flights in tb1?",
                "query": "SELECT City FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
            "utterance": "Which city has most number of arriving flights?"
        }
    },
    {
        "database_id": "pets_1",
        "interaction": [
            {
                "utterance": "Find the id of students who have cat pets?",
                "query": "SELECT stuid FROM has_pet AS T1 JOIN pets AS T2 ON T1.petid  =  T2.petid WHERE T2.pettype = 'cat' "
            },
            {
                "utterance": "Find the first name of students who are in tb1?",
                "query": "SELECT T1.Fname FROM student AS T1 JOIN tb1 AS T2 ON T1.stuid  =  T2.stuid"
            },
            {
                "utterance": "Find the id of students who have dogs pets?",
                "query": "SELECT stuid FROM has_pet AS T1 JOIN pets AS T2 ON T1.petid  =  T2.petid WHERE T2.pettype = 'dog' "
            },
            {
                "utterance": "Find the first name of students who are in tb3?",
                "query": "SELECT T1.Fname FROM student AS T1 JOIN tb3 AS T2 ON T1.stuid  =  T2.stuid"
            },
            {
                "utterance": "Find the students in tb2 and tb4?",
                "query": "SELECT Fname FROM tb1 INTERSECT SELECT Fname FROM tb2"
            }
        ],
        "final": {
            "query": "SELECT t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype = 'cat' intersect SELECT t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype = 'dog'",
            "utterance": "Find the first name of students who have both cat and dog pets."
        }
    },
    {
        "database_id": "cre_Doc_Template_Mgt",
        "interaction": [
            {
                "utterance": "how many times each template type code is used by documents?",
                "query": "SELECT T1.template_type_code, count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code "
            },
            {
                "utterance": "Which template type code is used by most number of documents in tb1?",
                "query": "SELECT template_type_code FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1",
            "utterance": "Which template type code is used by most number of documents?"
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "What are the countries where English is the official language?",
                "query": "SELECT t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language = 'english' and isofficial = 't' "
            },
            {
                "utterance": "What are the countries where Dutch is the official language?",
                "query": "SELECT t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language = 'dutch' and isofficial = 't' "
            },
            {
                "utterance": "What are the countries in tb1 or tb2?",
                "query": "SELECT name FROM tb1 UNION SELECT name FROM tb2"
            }
        ],
        "final": {
            "query": "SELECT t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language = 'english' and isofficial = 't' union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language = 'dutch' and isofficial = 't'",
            "utterance": "What are the countries where either English or Dutch is the official language ?"
        }
    },
    {
        "database_id": "network_1",
        "interaction": [
            {
                "utterance": "Which students have any friends?",
                "query": "SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id"
            },
            {
                "utterance": "What is the lowest grade of students who are not in tb1?",
                "query": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT student_id FROM tb1)"
            }
        ],
        "final": {
            "query": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)",
            "utterance": "What is the lowest grade of students who do not have any friends?"
        }
    },
    {
        "database_id": "student_transcripts_tracking",
        "interaction": [
            {
                "utterance": "Find the semester when Master students students got enrolled in.",
                "query": "SELECT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name = 'Master' "
            },
            {
                "utterance": "Find the semester when Bachelor students got enrolled in.",
                "query": "SELECT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name = 'Bachelor'"
            },
            {
                "utterance": "Find the semester both in tb1 and tb2?",
                "query": "SELECT semester_id FROM tb1 INTERSECT SELECT semester_id FROM tb2"
            }
        ],
        "final": {
            "query": "SELECT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name = 'Master' INTERSECT SELECT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name = 'Bachelor'",
            "utterance": "Find the semester when both Master students and Bachelor students got enrolled in."
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "how many languages each country speaks? return the name of the country.",
                "query": "SELECT T1.Name, count(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name"
            },
            {
                "utterance": "What is name of the country that speaks the largest number of languages in tb1?",
                "query": "SELECT Name FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1",
            "utterance": "What is name of the country that speaks the largest number of languages?"
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "Which continent where English is the official language.",
                "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language = 'English' AND T2.IsOfficial = 'T'"
            },
            {
                "utterance": "What is average life expectancy in the countries  not in tb1.",
                "query": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT Name FROM tb1)"
            }
        ],
        "final": {
            "query": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language = 'English' AND T2.IsOfficial = 'T')",
            "utterance": "What is average life expectancy in the countries where English is not the official language?"
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "what is the smallest population in any country in Asia?",
                "query": "SELECT Name FROM country WHERE Continent = 'Africa'"
            },
            {
                "utterance": "Which African countries have a smaller population than \"value\"?",
                "query": "SELECT min(population) FROM country WHERE Continent = 'Asia' AND population  < 'value'"
            }
        ],
        "final": {
            "query": "SELECT Name FROM country WHERE Continent = 'Africa'  AND population  <  (SELECT min(population) FROM country WHERE Continent = 'Asia')",
            "utterance": "Which African countries have a smaller population than that of any country in Asia?"
        }
    },
    {
        "database_id": "dog_kennels",
        "interaction": [
            {
                "utterance": "what is the total cost for each treatment? Give me the description of the treatment.",
                "query": "SELECT T1.treatment_type_description, sum(cost_of_treatment) FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code"
            },
            {
                "utterance": "Give me the description of the treatment type whose total cost is the lowest in tb1.",
                "query": "SELECT treatment_type_description FROM tb1 ORDER BY summation ASC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1",
            "utterance": "Give me the description of the treatment type whose total cost is the lowest."
        }
    },
    {
        "database_id": "network_1",
        "interaction": [
            {
                "utterance": "how many friends each high schooler has?",
                "query": "SELECT T2.name, count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id"
            },
            {
                "utterance": "What is the name of the high schooler who has the greatest number of friends in tb1?",
                "query": "SELECT name FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
            "utterance": "What is the name of the high schooler who has the greatest number of friends?"
        }
    },
    {
        "database_id": "flight_2",
        "interaction": [
            {
                "utterance": "what is the number of flights per airline?",
                "query": "SELECT T1.Airline, count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline"
            },
            {
                "utterance": "Which airline has most number of flights in tb1?",
                "query": "SELECT Airline FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1",
            "utterance": "Which airline has most number of flights?"
        }
    },
    {
        "database_id": "notfound",
        "interaction": [
            {
                "utterance": "Which students have any friends?",
                "query": "SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id"
            },
            {
                "utterance": "Find the minimum grade of students who are not in tb1?",
                "query": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT student_id FROM tb1)"
            }
        ],
        "final": {
            "query": "Question1:Find the minimum grade of students who have no friends.",
            "utterance": ""
        }
    },
    {
        "database_id": "car_1",
        "interaction": [
            {
                "utterance": "how many cylinders and accelerate each volvo model has?",
                "query": "SELECT T1.Id, T1.cylinders, T1.accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model = 'volvo'"
            },
            {
                "utterance": "from tb1, how many cylinders does the version with least accelerate have?",
                "query": "SELECT cylinders FROM tb1 ORDER BY accelerate ASC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model = 'volvo' ORDER BY T1.accelerate ASC LIMIT 1",
            "utterance": "For a volvo model, how many cylinders does the version with least accelerate have?"
        }
    },
    {
        "database_id": "concert_singer",
        "interaction": [
            {
                "utterance": "Show the stadium id, name ,and capacity with concerts in year 2014 or after.",
                "query": "SELECT T1.stadium_id , T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year >= 2014"
            },
            {
                "utterance": "what is the number of concerts per stadium in tb1? Show the stadium name and capacity",
                "query": "SELECT name, capacity, count(*) FROM tb1 GROUP BY stadium_id "
            },
            {
                "utterance": "Show the stadium name and capacity with most number of concerts in tb2.",
                "query": "SELECT name, capacity FROM tb2 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year >= 2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1",
            "utterance": "Show the stadium name and capacity with most number of concerts in year 2014 or after."
        }
    },
    {
        "database_id": "network_1",
        "interaction": [
            {
                "utterance": "Give the id of the student with the most likes.",
                "query": "SELECT student_id FROM Likes GROUP BY student_id ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "utterance": "Give the name of the student with the id of \"value\".",
                "query": "SELECT name FROM Highschooler WHERE id = 'value'"
            }
        ],
        "final": {
            "query": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
            "utterance": "Give the name of the student with the most likes."
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "what is the population larger than any country in Africa?",
                "query": "SELECT max(population) FROM country WHERE Continent = 'Africa'"
            },
            {
                "utterance": "Which Asian countries have a population that is larger than \"value\"?",
                "query": "SELECT Name FROM country WHERE Continent = 'Asia'  AND population  > 'value'"
            }
        ],
        "final": {
            "query": "SELECT Name FROM country WHERE Continent = 'Asia'  AND population  >  (SELECT max(population) FROM country WHERE Continent = 'Africa')",
            "utterance": "Which Asian countries have a population that is larger than any country in Africa?"
        }
    },
    {
        "database_id": "student_transcripts_tracking",
        "interaction": [
            {
                "utterance": "how many students are enrolled in each program?",
                "query": "SELECT T1.degree_summary_name, count(*) FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name"
            },
            {
                "utterance": "Find the kind of program which most number of students are enrolled in tb1.",
                "query": "SELECT degree_summary_name FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1",
            "utterance": "Find the kind of program which most number of students are enrolled in?"
        }
    },
    {
        "database_id": "dog_kennels",
        "interaction": [
            {
                "utterance": "how many treatments each dogs of owners have?",
                "query": "SELECT T1.owner_id, count(*) FROM Dogs AS T1 JOIN Treatments AS T2 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id"
            },
            {
                "utterance": "Which owner has paid for the most treatments on his or her dogs in tb1.",
                "query": "SELECT owner_id FROM tb1 ORDER BY T1.owner_id DESC LIMIT 1"
            },
            {
                "utterance": "List the owner id and last name with id \"value\".",
                "query": "SELECT owner_id ,  last_name FROM Owners WHERE owner_id = 'value'"
            }
        ],
        "final": {
            "query": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",
            "utterance": "Which owner has paid for the most treatments on his or her dogs? List the owner id and last name."
        }
    },
    {
        "database_id": "car_1",
        "interaction": [
            {
                "utterance": "What is the id and name of the different car makers who produced a car.",
                "query": "SELECT T1.Maker, T3.MakeId FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA"
            },
            {
                "utterance": "What is the name of the different car makers who produced a car in 1970 from tb1.",
                "query": "SELECT T1.Maker FROM tb1 AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.id WHERE T2.year = '1970'"
            }
        ],
        "final": {
            "query": "SELECT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year = '1970'",
            "utterance": "What is the name of the different car makers who produced a car in 1970?"
        }
    },
    {
        "database_id": "car_1",
        "interaction": [
            {
                "utterance": "What is the horsepower and the make of the car models with 3 cylinders?",
                "query": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders = 3"
            },
            {
                "utterance": "What is the maximum horsepower and the make of the car models in tb1.",
                "query": "SELECT horsepower ,  Make FROM tb1 ORDER BY horsepower DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders = 3 ORDER BY T2.horsepower DESC LIMIT 1",
            "utterance": "What is the maximum horsepower and the make of the car models with 3 cylinders?"
        }
    },
    {
        "database_id": "dog_kennels",
        "interaction": [
            {
                "utterance": "Find the id, last name and cell phone of the professionals who live in the state of Indiana.",
                "query": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  = 'Indiana' "
            },
            {
                "utterance": "how many treatments each professional has done?",
                "query": "SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number, count(*) FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id"
            },
            {
                "utterance": "Find the id, last name and cell phone of the professionals who have performed more than two treatments.",
                "query": "SELECT professional_id ,  last_name ,  cell_number FROM tb2 WHERE counter > 2"
            },
            {
                "utterance": "Find the professionals are in tb1 or tb2?",
                "query": "SELECT * FROM tb1 UNION SELECT * FROM tb3"
            }
        ],
        "final": {
            "query": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  = 'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*) > 2",
            "utterance": "Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments."
        }
    },
    {
        "database_id": "tvshow",
        "interaction": [
            {
                "utterance": "Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones.",
                "query": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by = 'Michael Chang'"
            },
            {
                "utterance": "Find the series name and country of the tv channel that is playing some cartoons directed by Michael Chang.",
                "query": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by = 'Ben Jones'"
            },
            {
                "utterance": "Find the series name and country of the tv channel that are both in tb1 and tb2?",
                "query": "SELECT * FROM tb1 INTERSECT SELECT * FROM tb2"
            }
        ],
        "final": {
            "query": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by = 'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by = 'Ben Jones'",
            "utterance": "Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?"
        }
    },
    {
        "database_id": "dog_kennels",
        "interaction": [
            {
                "utterance": "Which professionals live in the state of Indiana? List his or her id, last name and cell phone.",
                "query": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  = 'Indiana' "
            },
            {
                "utterance": "how many treatments each professional has done?",
                "query": "SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number, count(*) FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id"
            },
            {
                "utterance": "Which professionals have done treatment on more than 2 treatments in tb2? List his or her id, last name and cell phone.",
                "query": "SELECT professional_id ,  last_name ,  cell_number FROM tb2 WHERE counter > 2"
            },
            {
                "utterance": "Which professionals are in tb1 or tb2?",
                "query": "SELECT * FROM tb1 UNION SELECT * FROM tb3"
            }
        ],
        "final": {
            "query": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  = 'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*) > 2",
            "utterance": "Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone."
        }
    },
    {
        "database_id": "car_1",
        "interaction": [
            {
                "utterance": "what is the earliest year a car produced.",
                "query": "SELECT min(YEAR) FROM CARS_DATA"
            },
            {
                "utterance": "Find the make and production time of the cars that were produced in year \"value\".",
                "query": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year = 'value'"
            }
        ],
        "final": {
            "query": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA)",
            "utterance": "Find the make and production time of the cars that were produced in the earliest year?"
        }
    },
    {
        "database_id": "cre_Doc_Template_Mgt",
        "interaction": [
            {
                "utterance": "how many times each template type code is used by documents?",
                "query": "SELECT T1.template_type_code, count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code "
            },
            {
                "utterance": "Return the code of the template type that is most commonly used in documents in tb1.",
                "query": "SELECT template_type_code FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1",
            "utterance": "Return the code of the template type that is most commonly used in documents."
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "Which cities are in European countries?",
                "query": "SELECT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent = 'Europe'"
            },
            {
                "utterance": "Which cities where English is the official language?",
                "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.IsOfficial = 'T' AND T2.Language = 'English'"
            },
            {
                "utterance": "Which cities in tb1 but not in tb2?",
                "query": "SELECT name FROM tb1 NOT IN (SELECT Name FROM tb2)"
            }
        ],
        "final": {
            "query": "SELECT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent = 'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial = 'T' AND T4.Language = 'English')",
            "utterance": "Which cities are in European countries where English is not the official language?"
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "Give the names of nations that speak English.",
                "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language = 'English' "
            },
            {
                "utterance": "Give the names of nations that speak French.",
                "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language = 'French'"
            },
            {
                "utterance": "Give the names of nations in tb1 and tb2.",
                "query": "SELECT name FROM tb1 INTERSECT SELECT name FROM tb2"
            }
        ],
        "final": {
            "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language = 'English' INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language = 'French'",
            "utterance": "Give the names of nations that speak both English and French."
        }
    },
    {
        "database_id": "car_1",
        "interaction": [
            {
                "utterance": "Find the id and name of the makers that produced some cars.",
                "query": "SELECT T1.Maker, T3.MakeId FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA"
            },
            {
                "utterance": "Find the name of the makers that produced some cars in the year of 1970 from tb1?",
                "query": "SELECT T1.Maker FROM tb1 AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.id WHERE T2.year = '1970'"
            }
        ],
        "final": {
            "query": "SELECT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year = '1970'",
            "utterance": "Find the name of the makers that produced some cars in the year of 1970?"
        }
    },
    {
        "database_id": "car_1",
        "interaction": [
            {
                "utterance": "how many car makers each country has? list the number, id and name of the country.",
                "query": "SELECT T1.countryId ,  T1.CountryName, count(*) FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId"
            },
            {
                "utterance": "What are the ids and names of all countries that have more than 3 car makers in tb1?",
                "query": "SELECT countryId ,  CountryName FROM tb1 WHERE counter > 3"
            },
            {
                "utterance": "what are models for each country? list the model, id and name of the country.",
                "query": "SELECT T1.countryId ,  T1.CountryName, T3.Model FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker"
            },
            {
                "utterance": "What are the ids and names of all countries that produce the \"fiat\" model in tb3?",
                "query": "SELECT countryId ,  CountryName FROM tb3 WHERE Model = 'fiat'"
            },
            {
                "utterance": "What are the ids and names of all countries either in tb2 or tb4?",
                "query": "SELECT countryId ,  CountryName FROM tb2 UNION SELECT countryId ,  CountryName  FROM tb4"
            }
        ],
        "final": {
            "query": "SELECT t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*) > 3 union SELECT t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model = 'fiat'",
            "utterance": "What are the ids and names of all countries that either have more than 3 car makers or produce fiat model ?"
        }
    },
    {
        "database_id": "dog_kennels",
        "interaction": [
            {
                "utterance": "what is the number of dog per breed?",
                "query": "SELECT breed_code, count(*) FROM Dogs GROUP BY breed_code"
            },
            {
                "utterance": "Which dogs are of the rarest breed in tb1?",
                "query": "SELECT breed_code FROM tb1 ORDER BY counter ASC LIMIT 1 "
            },
            {
                "utterance": "Which dogs are of with breed of \"value\"? Show their names and treatment dates.",
                "query": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  = 'value'"
            }
        ],
        "final": {
            "query": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",
            "utterance": "Which dogs are of the rarest breed? Show their names and treatment dates."
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "how many languages each country speaks? return the name of the country.",
                "query": "SELECT T1.Name, count(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name"
            },
            {
                "utterance": "Give the name of the nation that uses the greatest amount of languages in tb1.",
                "query": "SELECT Name FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1",
            "utterance": "Give the name of the nation that uses the greatest amount of languages."
        }
    },
    {
        "database_id": "student_transcripts_tracking",
        "interaction": [
            {
                "utterance": "how many results each transcript has? what is the date, number of results and id.",
                "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM , count(*) Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id"
            },
            {
                "utterance": "What is the date and id of the transcript with the least number of results in tb1?",
                "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM tb1 ORDER BY counter ASC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",
            "utterance": "What is the date and id of the transcript with the least number of results?"
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "what is the number of languages per continent?",
                "query": "SELECT T1.Continent, count(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent"
            },
            {
                "utterance": "Which continent speaks the most languages in tb1?",
                "query": "SELECT Continent FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1",
            "utterance": "Which continent speaks the most languages?"
        }
    },
    {
        "database_id": "student_transcripts_tracking",
        "interaction": [
            {
                "utterance": "how many times each student has enrolled in any program?",
                "query": "SELECT T1.student_id, count(*) FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id"
            },
            {
                "utterance": "Which student enrolled the most in tb1?",
                "query": "SELECT T1.student_id, counter FROM tb1 ORDER BY counter DESC LIMIT 1"
            },
            {
                "utterance": "What is the first, middle, and last name, along with the id and number of enrollments, for the student with id of \"value\".",
                "query": "SELECT student_id ,  first_name ,  middle_name ,  last_name ,  count(*) FROM Students WHERE student_id = 'value' GROUP BY student_id"
            }
        ],
        "final": {
            "query": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
            "utterance": "What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program?"
        }
    },
    {
        "database_id": "cre_Doc_Template_Mgt",
        "interaction": [
            {
                "utterance": "how many paragraphs each document has? list the document id and name.",
                "query": "SELECT T1.document_id ,  T2.document_name, count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id "
            },
            {
                "utterance": "What is the document id and name with greatest number of paragraphs in tb1?",
                "query": "SELECT document_id ,  document_name FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",
            "utterance": "What is the document id and name with greatest number of paragraphs?"
        }
    },
    {
        "database_id": "employee_hire_evaluation",
        "interaction": [
            {
                "utterance": "how many times each employee received awards in the evaluation?",
                "query": "SELECT t1.name, count(*) FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID"
            },
            {
                "utterance": "Which employee received the most awards in tb1? Give me the employee name. ",
                "query": "SELECT name FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1",
            "utterance": "Which employee received the most awards in evaluations? Give me the employee name."
        }
    },
    {
        "database_id": "car_1",
        "interaction": [
            {
                "utterance": "what is the earliest year a car produced.",
                "query": "SELECT min(YEAR) FROM CARS_DATA"
            },
            {
                "utterance": "What is the maker of the carr produced in year \"value\" and what year was it?.",
                "query": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year = 'value'"
            }
        ],
        "final": {
            "query": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA)",
            "utterance": "What is the maker of the carr produced in the earliest year and what year was it?"
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "Which countries have English as an official language?",
                "query": "SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language = 'English' AND IsOfficial = 'T'"
            },
            {
                "utterance": "Which countries have Dutch as an official language?",
                "query": "SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language = 'Dutch' AND IsOfficial = 'T'"
            },
            {
                "utterance": "Which countries are either in tb1 or tb2.",
                "query": "SELECT * FROM tb1 UNION SELECT * FROM tb2"
            }
        ],
        "final": {
            "query": "SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language = 'English' AND IsOfficial = 'T' UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language = 'Dutch' AND IsOfficial = 'T'",
            "utterance": "Which countries have either English or Dutch as an official language?"
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "what is the the average population of cities?",
                "query": "SELECT avg(Population) FROM city"
            },
            {
                "utterance": "Find the number of cities in each district whose population is greater than \"value\"?",
                "query": "SELECT count(*) ,  District FROM city WHERE Population  > 'value' GROUP BY District"
            }
        ],
        "final": {
            "query": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",
            "utterance": "Find the number of cities in each district whose population is greater than the average population of cities?"
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "What is the country code of Aruba?",
                "query": "SELECT Code FROM country WHERE Name = 'Aruba'"
            },
            {
                "utterance": "how much each language is used in the country with code as \"value\"?",
                "query": "SELECT Language, Percentage FROM ountrylanguage  WHERE CountryCode = 'value' "
            },
            {
                "utterance": "Which language is the most popular in tb2?",
                "query": "SELECT Language FROM tb2 ORDER BY Percentage DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name = 'Aruba' ORDER BY Percentage DESC LIMIT 1",
            "utterance": "Which language is the most popular in Aruba?"
        }
    },
    {
        "database_id": "flight_2",
        "interaction": [
            {
                "utterance": "how many arriving flights each city has?",
                "query": "SELECT T1.City, count(*) FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City"
            },
            {
                "utterance": "Which city has the most frequent destination airport in tb1?",
                "query": "SELECT City FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
            "utterance": "Which city has the most frequent destination airport?"
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "what is the the average population across all cities?",
                "query": "SELECT avg(Population) FROM city"
            },
            {
                "utterance": "How many cities in each district have a population that is above \"value\"?",
                "query": "SELECT count(*) ,  District FROM city WHERE Population  > 'value' GROUP BY District"
            }
        ],
        "final": {
            "query": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",
            "utterance": "How many cities in each district have a population that is above the average population across all cities?"
        }
    },
    {
        "database_id": "car_1",
        "interaction": [
            {
                "utterance": "what is the model and horsepower of cars with 4 cylinders?",
                "query": "SELECT T1.Model, T1.horsepower FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders = 4"
            },
            {
                "utterance": "For all cars in tb1, which model has the most horsepower?",
                "query": "SELECT Model FROM tb1 ORDER BY horsepower DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders = 4 ORDER BY T2.horsepower DESC LIMIT 1",
            "utterance": "For all of the 4 cylinder cars, which model has the most horsepower?"
        }
    },
    {
        "database_id": "car_1",
        "interaction": [
            {
                "utterance": "what is the model and horsepower of cars with 4 cylinders?",
                "query": "SELECT T1.Model, T1.horsepower FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders = 4"
            },
            {
                "utterance": "For the cars in tb1, which model has the largest horsepower??",
                "query": "SELECT Model FROM tb1 ORDER BY horsepower DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders = 4 ORDER BY T2.horsepower DESC LIMIT 1",
            "utterance": "For the cars with 4 cylinders, which model has the largest horsepower?"
        }
    },
    {
        "database_id": "student_transcripts_tracking",
        "interaction": [
            {
                "utterance": "what is the number of students enrolled in each program. List both the id and the summary.",
                "query": "SELECT T1.degree_program_id ,  T1.degree_summary_name, count(*) FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id"
            },
            {
                "utterance": "Find the program which most number of students are enrolled in tb1. List both the id and the summary.",
                "query": "SELECT degree_program_id, degree_summary_name FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",
            "utterance": "Find the program which most number of students are enrolled in. List both the id and the summary."
        }
    },
    {
        "database_id": "notfound",
        "interaction": [
            {
                "utterance": "what is the number of students enrolled in each program. List both the id and the summary.",
                "query": "SELECT T1.degree_program_id ,  T1.degree_summary_name, count(*) FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id"
            },
            {
                "utterance": "What is the program id and the summary of the degree that has the most students enrolled in tb1.",
                "query": "SELECT degree_program_id, degree_summary_name FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",
            "utterance": "13What is the program id and the summary of the degree that has the most students enrolled?"
        }
    },
    {
        "database_id": "car_1",
        "interaction": [
            {
                "utterance": "what is the id of Europe continent?",
                "query": "SELECT ContId FROM CONTINENTS WHERE Continent = 'europe'"
            },
            {
                "utterance": "What are the names of all countries with continent id of \"value\"",
                "query": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country WHERE T1.Continent = 'value'"
            },
            {
                "utterance": "What are the names of countries in tb2 with at least 3 manufacturers?",
                "query": "SELECT CountryName FROM tb1 GROUP BY CountryName HAVING count(*) >= 3"
            }
        ],
        "final": {
            "query": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent = 'europe' GROUP BY T1.CountryName HAVING count(*) >= 3",
            "utterance": "What are the names of all European countries with at least 3 manufacturers?"
        }
    },
    {
        "database_id": "dog_kennels",
        "interaction": [
            {
                "utterance": "what is the total cost for each treatment? Give me the description of the treatment.",
                "query": "SELECT T1.treatment_type_description, sum(cost_of_treatment) FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code"
            },
            {
                "utterance": "What is the description of the treatment type that costs the least money in total in tb1.",
                "query": "SELECT treatment_type_description FROM tb1 ORDER BY summation ASC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1",
            "utterance": "What is the description of the treatment type that costs the least money in total?"
        }
    },
    {
        "database_id": "dog_kennels",
        "interaction": [
            {
                "utterance": "how much is spent in total for treatment for each dog?",
                "query": "SELECT dog_id, sum(cost_of_treatment) FROM Treatments "
            },
            {
                "utterance": "how much each owner spent for his or her dogs in tb1? ",
                "query": "SELECT T1.owner_id, T2.summation FROM Dogs AS T1 JOIN tb1 AS T2 ON T1.dog_id  =  T2.dog_id"
            },
            {
                "utterance": "Find the owner id and zip code and cost for the owners in tb2.",
                "query": "SELECT T1.owner_id, T1.zip_code, T2.summation FROM Owners AS T1 JOIN tb2 AS T2 ON T1.owner_id  =  T2.owner_id"
            },
            {
                "utterance": "Which owner spent the most money for his or her dogs in tb3?",
                "query": "SELECT owner_id, zip_code FROM tb3 ORDER BY summation DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",
            "utterance": "Find the owner id and zip code of the owner who spent the most money in total for his or her dogs."
        }
    },
    {
        "database_id": "battle_death",
        "interaction": [
            {
                "utterance": "Show names, results and bulgarian commanders of the battles with have ships lost in the \"English Channel\"",
                "query": "SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location = 'English Channel'"
            },
            {
                "utterance": "Show names, results and bulgarian commanders of the battles are not in tb1.",
                "query": "SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT name ,  result ,  bulgarian_commander FROM tb1 "
            }
        ],
        "final": {
            "query": "SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location = 'English Channel'",
            "utterance": "Show names, results and bulgarian commanders of the battles with no ships lost in the \"English Channel\"."
        }
    },
    {
        "database_id": "employee_hire_evaluation",
        "interaction": [
            {
                "utterance": "how many employees each shop has? give me the shop name.",
                "query": "SELECT t2.name, count(*) FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id"
            },
            {
                "utterance": "Which shop has the most employees in tb1? Give me the shop name.",
                "query": "SELECT name FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1",
            "utterance": "Which shop has the most employees? Give me the shop name."
        }
    },
    {
        "database_id": "orchestra",
        "interaction": [
            {
                "utterance": "how many times each conductor has conducted orchestras? show the conductor name.",
                "query": "SELECT T1.Name, count(*) FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID "
            },
            {
                "utterance": "Show the name of the conductor that has conducted the most number of orchestras in tb1?",
                "query": "SELECT Name FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
            "utterance": "Show the name of the conductor that has conducted the most number of orchestras."
        }
    },
    {
        "database_id": "concert_singer",
        "interaction": [
            {
                "utterance": "what are the id, name and capacity of stadiums with concerts after 2013.",
                "query": "SELECT t2.name ,  t2.capacity, t2.stadium_id from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year > 2013"
            },
            {
                "utterance": "how many concerts each stadium has in tb1? show the name and capacity of stadiums.",
                "query": "SELECT name ,  capacity, count(*) FROM tb1 group by stadium_id "
            },
            {
                "utterance": "What is the name and capacity of the stadium with the most concerts in tb2?",
                "query": "SELECT name ,  capacity FROM tb2 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year > 2013 group by t2.stadium_id order by count(*) desc limit 1",
            "utterance": "What is the name and capacity of the stadium with the most concerts after 2013 ?"
        }
    },
    {
        "database_id": "world_1",
        "interaction": [
            {
                "utterance": "what is the percentage that Spanish language is spoken in each country?",
                "query": "SELECT Percentage , CountryCode FROM countrylanguage WHERE LANGUAGE = 'Spanish'"
            },
            {
                "utterance": "What is the total number of countries where Spanish is spoken by the largest percentage of people in tb1.",
                "query": "SELECT count(*), max(Percentage) FROM tb1 GROUP BY CountryCode"
            }
        ],
        "final": {
            "query": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE = 'Spanish' GROUP BY CountryCode",
            "utterance": "What is the total number of countries where Spanish is spoken by the largest percentage of people?"
        }
    },
    {
        "database_id": "notfound",
        "interaction": [
            {
                "utterance": "what is the population less than any country in Asia?",
                "query": "SELECT max(population) FROM country WHERE Continent = 'Asia'"
            },
            {
                "utterance": "What are the African countries that have a population less than \"value\"?",
                "query": "SELECT Name FROM country WHERE Continent = 'Africa'  AND population < 'value'"
            }
        ],
        "final": {
            "query": "SELECT Name FROM country WHERE Continent = 'Africa'  AND population  <  (SELECT max(population) FROM country WHERE Continent = 'Asia')",
            "utterance": "What are the African countries that have a population less than any country in Asia?"
        }
    },
    {
        "database_id": "dog_kennels",
        "interaction": [
            {
                "utterance": "how many dogs have each breed name.",
                "query": "SELECT T1.breed_name, count(*) FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name"
            },
            {
                "utterance": "What is the name of the breed with the most dogs in tb1?",
                "query": "SELECT breed_name FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1",
            "utterance": "What is the name of the breed with the most dogs?"
        }
    },
    {
        "database_id": "flight_2",
        "interaction": [
            {
                "utterance": "Which airlines have departing flights from APG .",
                "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport = 'APG'"
            },
            {
                "utterance": "Which airlines have departing flights from CVO.",
                "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport = 'CVO'"
            },
            {
                "utterance": "Find all airlines that are in both tb1 and tb2.",
                "query": "SELECT Airline FROM tb1 INTERSECT SELECT Airline FROM tb2"
            }
        ],
        "final": {
            "query": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport = 'APG' INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport = 'CVO'",
            "utterance": "Which airlines have departing flights from both APG and CVO airports?"
        }
    },
    {
        "database_id": "car_1",
        "interaction": [
            {
                "utterance": "what is the id of Europe continent?",
                "query": "SELECT ContId FROM CONTINENTS WHERE Continent = 'europe'"
            },
            {
                "utterance": "Which countries with continent id of \"value\"?",
                "query": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country WHERE T1.Continent = 'value'"
            },
            {
                "utterance": "Which countries in tb2 have at least 3 car manufacturers?",
                "query": "SELECT CountryName FROM tb1 GROUP BY CountryName HAVING count(*) >= 3"
            }
        ],
        "final": {
            "query": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent = 'europe' GROUP BY T1.CountryName HAVING count(*) >= 3",
            "utterance": "Which countries in europe have at least 3 car manufacturers?"
        }
    },
    {
        "database_id": "notfound",
        "interaction": [
            {
                "utterance": "Which professional operated any treatment on dogs? List the professionals id, role and email.",
                "query": "SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id"
            },
            {
                "utterance": "Which professional are not in tb1? List the professionals id, role and email.",
                "query": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM tb1"
            }
        ],
        "final": {
            "query": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id",
            "utterance": "Which professional did not operate any treatment on dogs? List the professionals id, role and email."
        }
    },
    {
        "database_id": "notfound",
        "interaction": [
            {
                "utterance": "what is the number of enrollments in each course? list the number and name of the course.",
                "query": "SELECT  T1.course_name, count(*) FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name"
            },
            {
                "utterance": "What is the name of the course with most number of enrollments in tb1?",
                "query": "SELECT course_name FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1",
            "utterance": "What is the name of the course with most number of enrollments?"
        }
    },
    {
        "database_id": "pets_1",
        "interaction": [
            {
                "utterance": "what is the id of the dog pet?",
                "query": "SELECT petid FROM pets WHERE pettype = 'dog'"
            },
            {
                "utterance": "Find the first name and age of students who have the pet with id \"value1\".",
                "query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T2.petid = 'value1'"
            },
            {
                "utterance": "what is the ids of the cat pet?",
                "query": "SELECT petid FROM pets WHERE pettype = 'cat'"
            },
            {
                "utterance": "Find the first name and age of students who have the pet with id \"value2\".",
                "query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T2.petid = 'value2'"
            },
            {
                "utterance": "Find the first name and age of students in tb2 but not in tb4.",
                "query": "SELECT fname ,  age FROM tb2 NOT IN (SELECT fname, age FROM tb4)"
            }
        ],
        "final": {
            "query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype = 'cat')",
            "utterance": "Find the first name and age of students who have a dog but do not have a cat as a pet."
        }
    },
    {
        "database_id": "student_transcripts_tracking",
        "interaction": [
            {
                "utterance": "Find the last name of the students who who have registered in any degree programs?",
                "query": "SELECT T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id"
            },
            {
                "utterance": "Find the last name of the students who currently live in the state of North Carolina",
                "query": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county = 'NorthCarolina'"
            },
            {
                "utterance": "Find the last name of the students who are in tb2 but not in tb1?",
                "query": "SELECT last_name FROM tb2 EXCEPT SELECT last_name FROM tb1"
            }
        ],
        "final": {
            "query": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county = 'NorthCarolina' EXCEPT SELECT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id",
            "utterance": "Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program."
        }
    },
    {
        "database_id": "orchestra",
        "interaction": [
            {
                "utterance": "how many times each conductor has conducted orchestras? show the conductor name.",
                "query": "SELECT T1.Name, count(*) FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID "
            },
            {
                "utterance": "What is the name of the conductor who has conducted the most orchestras in tb1?",
                "query": "SELECT Name FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
            "utterance": "What is the name of the conductor who has conducted the most orchestras?"
        }
    },
    {
        "database_id": "pets_1",
        "interaction": [
            {
                "utterance": "what is the id of the dog pet?",
                "query": "SELECT petid FROM pets WHERE pettype = 'dog'"
            },
            {
                "utterance": "What is the first name of every student who has a pet with id \"value1\".",
                "query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T2.petid = 'value1'"
            },
            {
                "utterance": "what is the ids of the cat pet?",
                "query": "SELECT petid FROM pets WHERE pettype = 'cat'"
            },
            {
                "utterance": "What is the first name of every student who has a pet with id \"value2\".",
                "query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T2.petid = 'value2'"
            },
            {
                "utterance": "What is the first name of every student who are in tb2 but not in tb4.",
                "query": "SELECT fname ,  age FROM tb2 NOT IN (SELECT fname, age FROM tb4)"
            }
        ],
        "final": {
            "query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype = 'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype = 'cat')",
            "utterance": "What is the first name of every student who has a dog but does not have a cat?"
        }
    },
    {
        "database_id": "cre_Doc_Template_Mgt",
        "interaction": [
            {
                "utterance": "how many paragraphs each document has? list the document id and name.",
                "query": "SELECT T1.document_id ,  T2.document_name, count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id "
            },
            {
                "utterance": "Return the id and name of the document with the most paragraphs in tb1.",
                "query": "SELECT document_id ,  document_name FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",
            "utterance": "Return the id and name of the document with the most paragraphs."
        }
    },
    {
        "database_id": "network_1",
        "interaction": [
            {
                "utterance": "how many friends each high schooler has?",
                "query": "SELECT T2.name, count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id"
            },
            {
                "utterance": "Return the name of the high school student with the most friends in tb1?",
                "query": "SELECT name FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
            "utterance": "Return the name of the high school student with the most friends."
        }
    },
    {
        "database_id": "student_transcripts_tracking",
        "interaction": [
            {
                "utterance": "For each semester, how many students registered? show both the name and the id.",
                "query": "SELECT T1.semester_name ,  T1.semester_id, count(*) FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id"
            },
            {
                "utterance": "What is the semester which most student registered in tb1?",
                "query": "SELECT semester_name ,  semester_id FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",
            "utterance": "What is the semester which most student registered in? Show both the name and the id."
        }
    },
    {
        "database_id": "flight_2",
        "interaction": [
            {
                "utterance": "what are the airports have departing or arriving flights?",
                "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport"
            },
            {
                "utterance": "how many flights each airport has in tb1?",
                "query": "SELECT AirportCode, count(*) FROM tb1 GROUP By AirportCode"
            },
            {
                "utterance": "Give the code of the airport with the least flights in tb2.",
                "query": "SELECT AirportCode FROM tb2 ORDER counter ASC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1",
            "utterance": "Give the code of the airport with the least flights."
        }
    },
    {
        "database_id": "student_transcripts_tracking",
        "interaction": [
            {
                "utterance": "what is the number of degrees per department? list the number, department name and id.",
                "query": "SELECT t2.department_name ,  t1.department_id, count(*) from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id"
            },
            {
                "utterance": "Which department offers the most number of degrees in tb1? List department name and id.",
                "query": "SELECT department_name ,  department_id FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1",
            "utterance": "Which department offers the most number of degrees? List department name and id."
        }
    },
    {
        "database_id": "car_1",
        "interaction": [
            {
                "utterance": "what is the average weight of the cars?",
                "query": "SELECT avg(Weight) FROM CARS_DATA"
            },
            {
                "utterance": "What is the model for the car with a weight smaller than the \"value\"?",
                "query": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  < 'value'"
            }
        ],
        "final": {
            "query": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)",
            "utterance": "What is the model for the car with a weight smaller than the average?"
        }
    },
    {
        "database_id": "pets_1",
        "interaction": [
            {
                "utterance": "Find the students who have cat pet?",
                "query": "SELECT T1.stuid FROM has_pet AS T1 JOIN pets AS T2 ON T1.petid  =  T2.petid WHERE T2.pettype = 'cat'"
            },
            {
                "utterance": "Find the major and age of students who are not in tb1?",
                "query": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT stuid FROM tb1)"
            }
        ],
        "final": {
            "query": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype = 'cat')",
            "utterance": "Find the major and age of students who do not have a cat pet."
        }
    },
    {
        "database_id": "car_1",
        "interaction": [
            {
                "utterance": "What is the country with the most car makers?",
                "query": "SELECT Country FROM CAR_MAKERS GROUP BY Country ORDER BY Count(*) DESC LIMIT 1"
            },
            {
                "utterance": "What is the name of the country in tb1?",
                "query": "SELECT T1.CountryName FROM CAR_MAKERS AS T1 JOIN tb1 AS T2 ON  T1.CountryId = T2.Country "
            }
        ],
        "final": {
            "query": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1",
            "utterance": "What is the name of the country with the most car makers?"
        }
    },
    {
        "database_id": "car_1",
        "interaction": [
            {
                "utterance": "how many cylinders and accelerate each car with volvo model has?",
                "query": "SELECT T1.Id, T1.cylinders, T1.accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model = 'volvo'"
            },
            {
                "utterance": "from tb1, how many cylinders does the car with the least accelerate have??",
                "query": "SELECT cylinders FROM tb1 ORDER BY accelerate ASC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model = 'volvo' ORDER BY T1.accelerate ASC LIMIT 1",
            "utterance": "For model volvo, how many cylinders does the car with the least accelerate have?"
        }
    },
    {
        "database_id": "flight_2",
        "interaction": [
            {
                "utterance": "what is the number of source airport per city?",
                "query": "SELECT T1.City, count(*) FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City"
            },
            {
                "utterance": "Which city has most number of departing flights in tb1?",
                "query": "SELECT City FROM tb1 ORDER BY counter DESC LIMIT 1"
            }
        ],
        "final": {
            "query": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1",
            "utterance": "Which city has most number of departing flights?"
        }
    },
    {
        "database_id": "concert_singer",
        "interaction": [
            {
                "utterance": "What are the names and locations of the stadiums that had concerts that occurred in 2014?",
                "query": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014"
            },
            {
                "utterance": "What are the names and locations of the stadiums that had concerts that occurred in 2015?",
                "query": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015"
            },
            {
                "utterance": "What are the names and locations of the stadiums both in tb1 and tb2?",
                "query": "SELECT name ,  location FROM tb1 INTERSECT name, location FROM tb2"
            }
        ],
        "final": {
            "query": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year = 2015",
            "utterance": "What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?"
        }
    },
    {
        "database_id": "dog_kennels",
        "interaction": [],
        "final": {
            "query": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )",
            "utterance": "Find the number of professionals who have not treated any dogs."
        }
    }
]